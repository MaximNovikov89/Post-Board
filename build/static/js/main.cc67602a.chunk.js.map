{"version":3,"sources":["components/Greeting-Page/greetingPage.js","firebase/firebase.utils.js","components/Sign-Up/SignUp.js","components/Sign-in/Sign-in.js","components/Home-Page/NavBar/Navbar.js","components/Home-Page/ProfileCard/ProfileCard.js","Actions/actions.js","components/Home-Page/Post-Card/PostCard.js","components/Home-Page/Post-List/PostList.js","components/Home-Page/Modal/Modal.js","components/Home-Page/HomePage.js","App.js","serviceWorker.js","Reducers/rootReducer.js","index.js","Assest/Images/IconLogo.png","Assest/Images/backGroundMain.jpg"],"names":["useStyles","makeStyles","theme","root","flexGrow","backGround","backgroundImage","height","backgroundRepeat","backgroundPosition","backgroundSize","backgroundAttachment","GreetingPage","classes","greetingText","className","to","Button","variant","color","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","provider","GoogleAuthProvider","setCustomParameters","prompt","createUserProfileDocument","userAuth","additionalData","a","userRef","doc","uid","get","exists","displayName","email","createdAt","Date","set","console","log","message","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignUp","useState","lastName","password","confirmPassword","photoURL","userInfo","setUserInfo","history","useHistory","handleInputChange","event","target","name","value","handleSignUp","preventDefault","alert","createUserWithEmailAndPassword","catch","error","user","push","code","Container","component","maxWidth","CssBaseline","Avatar","Typography","noValidate","onSubmit","Grid","container","item","xs","sm","TextField","autoComplete","required","fullWidth","label","autoFocus","onChange","type","justify","Box","mt","SignIn","googleSignIn","signInWithPopup","handleChange","evt","handleSubmit","signInWithEmailAndPassword","FormControlLabel","control","Checkbox","onClick","Link","href","navBar","boxShadow","zIndex","maxHeight","padding","HomeNavbar","handleSignOut","signOut","Navbar","Col","style","position","src","Logo","NavbarBrand","paddingLeft","id","ProfileCard","props","dispatch","useDispatch","handlePostType","element","val","avatarUrl","alt","userName","handleModal","media","paddingTop","blue","PostCard","useSelector","state","Card","CardHeader","aria-label","post","size","action","IconButton","title","subheader","header","CardMedia","image","CardContent","content","CardActions","disableSpacing","fontSize","List","posts","postType","postListType","useEffect","then","data","collection","globalPostsArr","docs","map","key","PostModal","modal","currentPost","setCurrentPost","setPosts","handleInput","uuid","Modal","isOpen","toggle","ModalHeader","ModalBody","FormGroup","Input","maxLength","placeholder","ModalFooter","docRef","globalPosts","updatedPosts","update","add","author","HomePage","logo","logoUrl","currentUser","setCurrentUser","isModal","setIsModal","Row","overflowY","App","unsubscribeFromAuth","onAuthStateChanged","onSnapshot","snapShot","exact","path","Boolean","window","location","hostname","match","initialState","rootReducer","actions","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.cc67602a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './greetingPage.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport backgroundImage from '../../Assest/Images/backGroundMain.jpg';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    backGround: {\r\n        flexGrow: 1,\r\n        backgroundImage: `url(${backgroundImage})`,\r\n        height: '100vh',\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"center center\",\r\n        backgroundSize: \"cover\",\r\n        backgroundAttachment: \"fixed\",\r\n    },\r\n}));\r\n\r\nexport default function GreetingPage() {\r\n    const classes = useStyles();\r\n    const greetingText = ['Share your thoughts pictures and work ', <br />, 'or what ever is on your to mind'];\r\n\r\n\r\n    return (\r\n        <div className={classes.backGround}>\r\n            <div className='mainCoverGrid'>\r\n                <div className='mainCover'>\r\n                    <h1 className='mainHeader'>Post-Board</h1>\r\n                    <h3 className='mainSubHeader'>{greetingText}</h3>\r\n\r\n                    <Link to='/log-in' className='joinLink'>\r\n                        <Button variant=\"contained\" color=\"primary\" className='mainJoinButton'>Join</Button>\r\n                    </Link>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyB6wCwLDHN64azl4RtHquKZOFdwlHWTpq4\",\r\n    authDomain: \"post-board-d7b1e.firebaseapp.com\",\r\n    databaseURL: \"https://post-board-d7b1e.firebaseio.com\",\r\n    projectId: \"post-board-d7b1e\",\r\n    storageBucket: \"post-board-d7b1e.appspot.com\",\r\n    messagingSenderId: \"166063070185\",\r\n    appId: \"1:166063070185:web:d88d7c53cde9c81ed90978\",\r\n    measurementId: \"G-VLFW832SVZ\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n    if (!userAuth) return;\r\n\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n    const snapShot = await userRef.get()\r\n\r\n    //If userAuth true (firebase AUTH) but not exist yet in out Database\r\n    if (!snapShot.exists) {\r\n        const { displayName, email } = userAuth;\r\n        const createdAt = new Date();\r\n\r\n        try {\r\n            await userRef.set({\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                ...additionalData\r\n            })\r\n\r\n        } catch (error) {\r\n            console.log('Error Creating User', error.message);\r\n        }\r\n    }\r\n    return userRef;\r\n}\r\nexport default firebase;","import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\nimport { Link } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n// import { useSelector } from 'react-redux';\r\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignUp() {\r\n    const classes = useStyles();\r\n    const [userInfo, setUserInfo] = useState({\r\n        displayName: '',\r\n        email: '',\r\n        lastName: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        photoURL: 'https://www.jumpstarttech.com/files/2018/08/Network-Profile.png'\r\n    });\r\n    const history = useHistory();\r\n\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setUserInfo({ ...userInfo, [name]: value });\r\n    }\r\n\r\n\r\n    //Sign-Up with email/Password firebase\r\n    const handleSignUp = async event => {\r\n        event.preventDefault();\r\n        const { displayName, email, password, confirmPassword, photoURL } = userInfo;\r\n        if (password !== confirmPassword) {\r\n            alert(\"password don't match\");\r\n            return;\r\n        }\r\n        try {\r\n            const { user } = await auth.createUserWithEmailAndPassword(email, password).catch(function (error) { console.log(error); });\r\n\r\n            await createUserProfileDocument(user, { displayName, photoURL });\r\n\r\n            setUserInfo({});\r\n            history.push('/log-in');\r\n        } catch (error) {\r\n            switch (error.code) {\r\n                case 'auth/invalid-email':\r\n                    alert(\"Email adress incorrect\")\r\n                    history.push(\"/sign-up\");\r\n                    break;\r\n                case 'auth/email-already-in-use':\r\n                    alert(\"Email already in use\")\r\n                    history.push(\"/sign-up\");\r\n                    break;\r\n                case 'auth/weak-password':\r\n                    alert('Password must be at least 8 characters long')\r\n                    history.push(\"/sign-up\");\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign up\r\n        </Typography>\r\n                <form className={classes.form} noValidate onSubmit={handleSignUp}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                autoComplete=\"fname\"\r\n                                name=\"displayName\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                label=\"First Name\"\r\n                                // value={userInfo.displayName}\r\n                                autoFocus\r\n                                onChange={handleInputChange}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                label=\"Last Name\"\r\n                                name=\"lastName\"\r\n                                autoComplete=\"lname\"\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"confirmPassword\"\r\n                                label=\"Confirm Password\"\r\n                                type=\"password\"\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign Up\r\n          </Button>\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link to=\"/log-in\" variant=\"body2\">\r\n                                Already have an account? Sign in\r\n              </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={5}>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\r\n// import { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignIn() {\r\n\r\n    //==========States=========//\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const [userInfo, setUserInfo] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    //==========useEffect=========//\r\n\r\n\r\n    //==========Methods=========//\r\n    const googleSignIn = async (event) => {\r\n        event.preventDefault();\r\n        await signInWithGoogle();\r\n        history.push('/homepage');\r\n    };\r\n\r\n    const handleChange = (evt) => {\r\n        setUserInfo({\r\n            ...userInfo,\r\n            [evt.target.name]: evt.target.value\r\n        })\r\n    }\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n        const { email, password } = userInfo;\r\n        try {\r\n            await auth.signInWithEmailAndPassword(email, password);\r\n            setUserInfo({ email: '', password: '' });\r\n            history.push('/homepage');\r\n        } catch (error) {\r\n            if (error.code === 'auth/user-not-found') {\r\n                alert(\"You have not registered yet\")\r\n            }\r\n            else {\r\n                console.log(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                 </Typography>\r\n                <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n                    <TextField\r\n                        onChange={handleChange}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"off\"\r\n\r\n                    />\r\n                    <TextField\r\n                        onChange={handleChange}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        autoComplete=\"current-password\"\r\n\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                        label=\"Remember me\"\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={googleSignIn}\r\n                    >\r\n                        Sign In With Google\r\n                    </Button>\r\n                    <Grid container>\r\n                        {/* <Grid item xs>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                Forgot password?\r\n                             </Link>\r\n                        </Grid> */}\r\n                        <Grid item>\r\n                            <Link href=\"#/sign-up\" variant=\"body2\">\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport {\r\n    Navbar,\r\n    NavbarBrand,\r\n    Col\r\n} from 'reactstrap';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { auth } from '../../../firebase/firebase.utils';\r\nimport Logo from '../../../Assest/Images/IconLogo.png';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        }\r\n    },\r\n    navBar: {\r\n        backgroundColor: '#E0FBFC',\r\n        boxShadow: \"2px 3px 3px 0px rgba(108, 105, 112,0.25),0px 10px 25px 0px rgba(110, 120, 130,5)\",\r\n        zIndex: '2',\r\n        maxHeight: '4.2rem',\r\n        padding: '0.6rem'\r\n    }\r\n}));\r\n\r\nconst HomeNavbar = () => {\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const history = useHistory();\r\n    const toggle = () => setIsOpen(!isOpen);\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n    const handleSignOut = async () => {\r\n        await auth.signOut();\r\n        history.push('/log-in');\r\n    }\r\n\r\n    return (\r\n        <div >\r\n\r\n            <Navbar className={classes.navBar} >\r\n                <Col xs='2'>\r\n                    <img style={{ width: '4rem', height: '4rem', position: 'relative' }} src={Logo}></img>\r\n                    <NavbarBrand>Post-Board</NavbarBrand>\r\n                </Col>\r\n\r\n                <Col xs='1' style={{ paddingLeft: '0' }}>\r\n                    <form className={classes.root} noValidate autoComplete=\"off\">\r\n                        <TextField id=\"standard-basic\" label=\"Search Friends\" />\r\n                    </form>\r\n                </Col>\r\n\r\n                <Col xs='5'></Col>\r\n\r\n                <Col xs='2'>\r\n                    <form className={classes.root} noValidate autoComplete=\"off\">\r\n                        <TextField id=\"standard-basic\" label=\"Search Posts\" />\r\n                    </form>\r\n                </Col>\r\n                <Col xs='1'></Col>\r\n                <Col xs='1'>\r\n                    <Button color=\"secondary\" onClick={handleSignOut}>Log Out</Button>\r\n                </Col>\r\n\r\n            </Navbar>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeNavbar;\r\n\r\n//<a href='https://pngtree.com/so/icon'>icon png from pngtree.com</a>\r\n","import React from 'react';\r\nimport './ProfileCard.scss';\r\nimport * as actions from '../../../Actions/actions';\r\nimport { useDispatch } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\n\r\nexport default function ProfileCard(props) {\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleOpenModal = () => {\r\n        props.handleModal();\r\n    }\r\n    const handlePostType = (element) => {\r\n        const val = element.target.value;\r\n        console.log(element.target.value);\r\n        dispatch({ type: actions.SET_POST_LIST_TYPE, value: val });\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div className=\"card\">\r\n                <img src={props.avatarUrl} alt=\"avatar\" className=\"card__image\" />\r\n                <p className=\"card__name\">{props.userName}</p>\r\n                <ul className='cardList'>\r\n                    <button value='global' onClick={handlePostType}>Global Posts</button>\r\n                    <button value='users' onClick={handlePostType}>My Posts</button>\r\n                </ul>\r\n                <div className=\"grid-container\">\r\n                    <div className=\"grid-child-posts\">\r\n                        0 Post\r\n                    </div>\r\n\r\n                    <div className=\"grid-child-followers\">\r\n                        0 Friends\r\n                     </div>\r\n                </div>\r\n                <div>\r\n                    <button xs='2' className=\"profileBtn draw-border\" onClick={handleOpenModal}>Post</button>\r\n                    <button xs='2' className=\"profileBtn draw-border\">Upload</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n","export const ADD_USER_OBJ = 'ADD_USER_OBJ';\r\nexport const SET_POST_LIST_TYPE = 'SET_POST_LIST_TYPE';\r\nexport const SET_POSTS = 'SET_POSTS';\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { useSelector } from 'react-redux';\r\nimport './Post_card.css';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 345,\r\n        maxHeight: 450,\r\n        height: 300\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    avatar: {\r\n        backgroundColor: blue[500],\r\n    },\r\n}));\r\n\r\nexport default function PostCard(props) {\r\n    //==========States=========//\r\n    const user = useSelector(state => state.user);\r\n    const classes = useStyles();\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n\r\n                        <img src={props.post.photoURL} alt=\"avatar\" size={10} className=\"avatar__image\" />\r\n                    </Avatar>\r\n                }\r\n                action={\r\n                    <IconButton aria-label=\"settings\">\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                }\r\n                title={props.post.displayName}\r\n                subheader={props.post.header}\r\n            />\r\n            <CardMedia\r\n                className={classes.media}\r\n                image=\"/static/images/cards/paella.jpg\"\r\n                title=\"Paella dish\"\r\n            />\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    {props.post.content}\r\n\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n                <IconButton aria-label=\"add to favorites\">\r\n                    <FavoriteIcon />\r\n                </IconButton>\r\n                <IconButton style={{ fontSize: '1rem' }}>12</IconButton>\r\n                <IconButton aria-label=\"share\">\r\n                    <ChatBubbleOutlineIcon />\r\n                </IconButton>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport PostCard from '../Post-Card/PostCard';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport firebase from \"firebase/app\";\r\nimport * as actions from '../../../Actions/actions';\r\n\r\n\r\n\r\n\r\nconst List = () => {\r\n\r\n    //==========States=========//\r\n    const user = useSelector(state => state.user);\r\n    const posts = useSelector(state => state.posts);\r\n    const postType = useSelector(state => state.postListType);\r\n    console.log(postType);\r\n    const dispatch = useDispatch();\r\n    const [usersPostList, setUsersPostList] = useState([]);\r\n    const [globalPostList, setGlobalDisplayList] = useState([]);\r\n\r\n    //==========useEffect=========//\r\n\r\n    //  Fetching Data from firebase and updating postList  //\r\n    useEffect(() => {\r\n        if (postType === 'users') {\r\n            try {\r\n                //tries to access specific user document in the database using current user ID.\r\n                firebase\r\n                    .firestore()\r\n                    .doc(`users/${user.uid}`)\r\n                    .get()\r\n                    .then(function (doc) {\r\n\r\n                        if (doc.exists) {\r\n                            let data = doc.data();\r\n                            dispatch({ type: actions.SET_POSTS, value: data.posts });\r\n                        }\r\n                        else {\r\n                            // doc.data() will be undefined in this case\r\n                            console.log(\"No such document!\");\r\n                        }\r\n\r\n                    }).catch(function (error) {\r\n                        console.log(\"Error getting document:\", error);\r\n                    })\r\n            }\r\n            catch (error) {\r\n                // console.log(error);\r\n            }\r\n        }\r\n        else {\r\n            try {\r\n                //tries to access Global post collection in the database, Setting global post list.\r\n                firebase\r\n                    .firestore()\r\n                    .collection('globalPosts')\r\n                    .get()\r\n                    .then(function (doc) {\r\n                        if (doc) {\r\n\r\n                            let globalPostsArr = [];\r\n                            let data = doc.docs;\r\n\r\n                            data.map(post => {\r\n                                globalPostsArr.push(post.data())\r\n                            })\r\n                            dispatch({ type: actions.SET_POSTS, value: globalPostsArr });\r\n                        }\r\n                        else {\r\n                            // doc.data() will be undefined in this case\r\n                            console.log(\"No such document!\");\r\n                        }\r\n\r\n                    }).catch(function (error) {\r\n                        console.log(\"Error getting document:\", error);\r\n                    })\r\n            }\r\n            catch (error) {\r\n                // console.log(error);\r\n            }\r\n        }\r\n        return () => { }\r\n    }, [postType]);\r\n\r\n\r\n\r\n    //  Setting Display List  //\r\n    // useEffect(() => {\r\n    //     if (posts) {\r\n    //         if (!displayList) {\r\n    //             setDisplayList(<div />)\r\n    //         }\r\n    //     }\r\n    // }, []);\r\n\r\n    return (\r\n        <>\r\n            <ul>\r\n                {posts.map(post =>\r\n\r\n                    <li className=\"list-group-item\" style={{ display: 'inline-block', margin: '1rem' }} key={post.id}>\r\n                        <PostCard post={post} user={user} />\r\n                    </li>\r\n\r\n                )}\r\n            </ul>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default List;","import React, { useState, useEffect } from 'react';\r\nimport uuid from 'react-uuid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Input } from 'reactstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport firebase from \"firebase/app\";\r\n\r\n\r\nconst PostModal = (props) => {\r\n    const {\r\n        className\r\n    } = props;\r\n    //==========States=========//\r\n    const [modal] = useState(true);\r\n    const [currentPost, setCurrentPost] = useState({});\r\n    const [posts, setPosts] = useState([]);\r\n    const user = useSelector(state => state.user);\r\n\r\n    //==========useEffect=========//\r\n    useEffect(() => {\r\n        //  Fetching Data from firebase and updating component's state  //\r\n        firebase\r\n            .firestore()\r\n            .doc(`users/${user.uid}`)\r\n            .get()\r\n            .then(function (doc) {\r\n\r\n                if (doc.exists) {\r\n                    let data = doc.data();\r\n                    setPosts(data.posts);\r\n                }\r\n                else {\r\n                    // doc.data() will be undefined in this case\r\n                    console.log(\"No such document!\");\r\n                }\r\n\r\n            }).catch(function (error) {\r\n                console.log(\"Error getting document:\", error);\r\n            });\r\n    }, [])\r\n\r\n\r\n    //==========Methods=========//\r\n    const handleInput = (element) => {\r\n        setCurrentPost({\r\n            ...currentPost,\r\n            id: uuid(),\r\n            [element.target.name]: element.target.value,\r\n            photoURL: user.photoURL\r\n        })\r\n    }\r\n    //post to database//\r\n    const handlePost = () => {\r\n\r\n        const docRef = firebase.firestore().doc(`users/${user.uid}`);\r\n        const globalPosts = firebase.firestore().collection('globalPosts');\r\n\r\n        //Accessing specific user document, Adding post to user document. \r\n        docRef\r\n            .get()\r\n            .then(\r\n                function (doc) {\r\n                    let data = doc.data();\r\n                    if (data.posts) {\r\n\r\n                        let updatedPosts = posts;\r\n                        updatedPosts.push(currentPost);\r\n\r\n                        docRef.update({\r\n                            posts: updatedPosts\r\n                        })\r\n                        globalPosts.add({ author: `${user.displayName}`, ...currentPost })\r\n                    }\r\n                    else {\r\n                        docRef.update({\r\n                            posts: [currentPost]\r\n                        })\r\n                        globalPosts.add({ author: `${user.displayName}`, ...currentPost })\r\n                    }\r\n                }\r\n            );\r\n        props.handleModal();\r\n    }\r\n    return (\r\n        <div>\r\n            {/* <Button color=\"danger\" onClick={toggle}>{buttonLabel}</Button> */}\r\n            <Modal isOpen={modal} toggle={props.handleModal} className={className}>\r\n\r\n                <ModalHeader toggle={props.handleModal}>\r\n                    <TextField\r\n                        id=\"standard-basic\"\r\n                        label=\"Post Header\"\r\n                        name=\"header\"\r\n                        onChange={handleInput} />\r\n                </ModalHeader>\r\n\r\n\r\n                <ModalBody>\r\n                    <FormGroup >\r\n                        <Input\r\n                            style={{ height: '10rem' }}\r\n                            type=\"textarea\"\r\n                            id=\"exampleText\"\r\n                            name=\"content\"\r\n                            onChange={handleInput}\r\n                            maxLength={200}\r\n                            placeholder='You say...' />\r\n\r\n                    </FormGroup>\r\n                </ModalBody>\r\n\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={handlePost}>Post</Button>\r\n                    <Button color=\"secondary\" onClick={props.handleModal}> Cancel</Button>\r\n                </ModalFooter>\r\n\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostModal;","import React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Row, Col } from 'reactstrap';\r\nimport HomeNavbar from './NavBar/Navbar';\r\nimport { useSelector } from 'react-redux';\r\nimport ProfileCard from './ProfileCard/ProfileCard';\r\nimport Logo from '../../Assest/Images/IconLogo.png';\r\nimport List from './Post-List/PostList';\r\nimport PostModal from './Modal/Modal';\r\n\r\n\r\nexport default function HomePage() {\r\n\r\n    //==========Styles-MaterialUI==========//\r\n    const useStyles = makeStyles((theme) => ({\r\n        logo: {\r\n            width: '80px',\r\n            height: '80px'\r\n        },\r\n        logoUrl: {\r\n            backgroundImage: `url(${Logo})`,\r\n        }\r\n    }));\r\n    const classes = useStyles();\r\n\r\n\r\n    //==========States=========//\r\n    const [currentUser, setCurrentUser] = useState({});\r\n    const user = useSelector(state => state.user);\r\n    const [isModal, setIsModal] = useState(false);\r\n\r\n    //==========UseEffect==========//\r\n    useEffect(() => {\r\n        if (user) {\r\n            setCurrentUser(user);\r\n        }\r\n    }, [user]);\r\n\r\n    //==========Methods=========//\r\n    const handleModal = () => {\r\n        setIsModal(!isModal);\r\n    }\r\n\r\n    return (\r\n        <div style={{ backgroundColor: '#f5f5f5', height: '100vh', width: '100vw' }}>\r\n            <Row >\r\n                <Col xs='12' >\r\n                    <HomeNavbar />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xs='2'>\r\n                    <ProfileCard\r\n                        avatarUrl={currentUser.photoURL}\r\n                        userName={currentUser.displayName}\r\n                        handleModal={handleModal} /></Col>\r\n\r\n                <Col xs='8'>\r\n\r\n                    <Row>\r\n                        <Col xs='12' style={{ overflowY: 'auto', maxHeight: '100vh', padding: '3rem' }}>\r\n\r\n                            {isModal ? <PostModal handleModal={handleModal} /> : <List />}\r\n\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Col>\r\n\r\n\r\n                <Col xs='2' style={{ backgroundColor: '#E0FBFC', zIndex: '1' }}>\r\n                    <Row style={{ marginTop: '2rem' }}>\r\n                        <Col xs='3' />\r\n\r\n                        <Col xs='6'><h3>Friends</h3></Col>\r\n                        <Col xs='3' />\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs='1'>Icon</Col>\r\n                        <Col xs='1' />\r\n                        <Col><p>Friends Name</p></Col>\r\n                        <Col xs='2' />\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs='1'>Icon</Col>\r\n                        <Col xs='1' />\r\n                        <Col><p>Friends Name</p></Col>\r\n                        <Col xs='2' />\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs='1'>Icon</Col>\r\n                        <Col xs='1' />\r\n                        <Col><p>Friends Name</p></Col>\r\n                        <Col xs='2' />\r\n                    </Row>\r\n                </Col>\r\n\r\n\r\n            </Row>\r\n        </div >\r\n\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\nimport { HashRouter as Router, Switch, Route, HashRouter } from 'react-router-dom';\nimport GreetingPage from './components/Greeting-Page/greetingPage';\nimport SignUp from './components/Sign-Up/SignUp';\nimport SignIn from './components/Sign-in/Sign-in';\nimport HomePage from './components/Home-Page/HomePage';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport { useDispatch } from 'react-redux';\nimport * as actions from './Actions/actions';\n\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(null);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n\n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n            ...userAuth,\n            ...snapShot.data()\n          });\n        });\n      }\n      else {\n        setCurrentUser(userAuth);\n      }\n    });\n    return () => {\n      unsubscribeFromAuth();\n    }\n  }, []);\n  dispatch({ type: actions.ADD_USER_OBJ, value: currentUser });\n\n  return (\n\n    < HashRouter >\n      <Router>\n        <Switch>\n\n          {/* <Route exact path=\"/asdasdas\" component={() => { return <Auth /> }} /> */}\n          <Route exact path=\"/\" component={() => { return <GreetingPage /> }} />\n          <Route exact path=\"/homepage\" component={() => { return <HomePage /> }} />\n          <Route exact path='/log-in' component={() => { return <SignIn /> }} />\n          <Route exact path='/sign-up' component={() => { return <SignUp /> }} />\n\n        </Switch>\n      </Router>\n    </HashRouter >\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\nconst initialState = {\r\n    user: null,\r\n    postListType: 'global',\r\n    posts: [],\r\n};\r\n\r\nfunction rootReducer(state = initialState, actions) {\r\n    switch (actions.type) {\r\n\r\n        case 'ADD_USER_OBJ':\r\n            return {\r\n                ...state,\r\n                user: actions.value\r\n            }\r\n\r\n        case 'SET_POST_LIST_TYPE':\r\n            return {\r\n                ...state,\r\n                postListType: actions.value\r\n            }\r\n\r\n        case 'SET_POSTS':\r\n            return {\r\n                ...state,\r\n                posts: actions.value\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './Reducers/rootReducer';\n\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode> <Provider store={store}>\n\n    <App />\n\n  </Provider></React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/IconLogo.f0dddcdd.png\";","module.exports = __webpack_public_path__ + \"static/media/backGroundMain.3214051d.jpg\";"],"sourceRoot":""}