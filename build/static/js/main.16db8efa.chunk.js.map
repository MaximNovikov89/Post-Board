{"version":3,"sources":["Greeting-Page/greetingPage.js","Sign-Up/signUp.js","Actions/actions.js","Sign-in/Sign-in.js","Auth/Auth.js","App.js","serviceWorker.js","Reducers/rootReducer.js","index.js","Assest/Images/backGroundMain.jpg"],"names":["useStyles","makeStyles","theme","root","flexGrow","backGround","backgroundImage","height","backgroundRepeat","backgroundPosition","backgroundSize","backgroundAttachment","GreetingPage","classes","history","useHistory","className","Button","variant","color","onClick","push","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignUp","dispatch","useDispatch","handleInputChange","useSelector","initialState","event","type","target","name","value","Container","component","maxWidth","CssBaseline","Avatar","Typography","noValidate","onSubmit","userData","Axios","post","Grid","container","item","xs","sm","TextField","autoComplete","required","fullWidth","id","label","autoFocus","onChange","justify","Link","href","Box","mt","SignIn","state","FormControlLabel","control","Checkbox","Auth","useState","user","exact","path","App","Boolean","window","location","hostname","match","firstName","lastName","email","password","uuid","rootReducer","actions","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.16db8efa.chunk.js","sourcesContent":["import React from 'react';\r\nimport './greetingPage.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useHistory } from 'react-router-dom';\r\nimport backgroundImage from '../Assest/Images/backGroundMain.jpg';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    backGround: {\r\n        flexGrow: 1,\r\n        backgroundImage: `url(${backgroundImage})`,\r\n        height: '100vh',\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"center center\",\r\n        backgroundSize: \"cover\",\r\n        backgroundAttachment: \"fixed\",\r\n    },\r\n}));\r\n\r\nexport default function GreetingPage() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const useLink = () => {\r\n        history.push('/sign-up');\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={classes.backGround}>\r\n            <div className='mainCoverGrid'>\r\n                <div className='mainCover'>\r\n                    <h1 className='mainHeader'>Post-Board</h1>\r\n                    <h3 className='mainSubHeader'>Share your thoughts pictures and work or what ever is on your to mind</h3>\r\n                    <Button variant=\"contained\" color=\"primary\" className='mainJoinButton' onClick={useLink}>\r\n                        Join\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as actions from '../Actions/actions';\r\nimport Axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignUp() {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const userData = useSelector((initialState) => initialState);\r\n\r\n    const handleInputChange = (event) => {\r\n        dispatch({ type: event.target.name, value: event.target.value })\r\n    }\r\n\r\n    const handleSubmit = (userData) => {\r\n        Axios.post()\r\n    }\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign up\r\n        </Typography>\r\n                <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                autoComplete=\"fname\"\r\n                                name={actions.ADD_FIRST_NAME}\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"firstName\"\r\n                                label=\"First Name\"\r\n                                autoFocus\r\n                                onChange={handleInputChange}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"lastName\"\r\n                                label=\"Last Name\"\r\n                                name={actions.ADD_LAST_NAME}\r\n                                autoComplete=\"lname\"\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name={actions.ADD_EMAIL}\r\n                                autoComplete=\"email\"\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name={actions.ADD_PASSWORD}\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign Up\r\n          </Button>\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link href=\"#/sign-in\" variant=\"body2\">\r\n                                Already have an account? Sign in\r\n              </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={5}>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","export const ADD_FIRST_NAME = 'ADD_FIRST_NAME';\r\nexport const ADD_LAST_NAME = 'ADD_LAST_NAME';\r\nexport const ADD_EMAIL = 'ADD_EMAIL';\r\nexport const ADD_PASSWORD = 'ADD_PASSWORD';\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n// import uuid from 'uuid';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignIn() {\r\n    const classes = useStyles();\r\n\r\n    const userName = useSelector((state) => state.name);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                 </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        // id={uuid()}\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        // id={uuid()}\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                        label=\"Remember me\"\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    <Grid container>\r\n                        {/* <Grid item xs>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                Forgot password?\r\n                             </Link>\r\n                        </Grid> */}\r\n                        <Grid item>\r\n                            <Link href=\"#/sign-up\" variant=\"body2\">\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { HashRouter as Router, Switch, Route, HashRouter } from 'react-router-dom';\r\nimport { auth } from '../firebase'\r\nimport GreetingPage from '../Greeting-Page/greetingPage';\r\nimport SignUp from '../Sign-Up/signUp';\r\nimport SignIn from '../Sign-in/Sign-in';\r\n\r\nexport default function Auth() {\r\n    const [user, setUser] = useState(true);\r\n\r\n    // useEffect(() => {\r\n    //     auth().onAuthStateChanged()\r\n\r\n    // }, [])\r\n\r\n\r\n    if (!user) return (\r\n        < HashRouter >\r\n            <Router>\r\n                <Switch>\r\n\r\n\r\n                    <Route exact path=\"/\" component={() => { return <GreetingPage /> }} />\r\n                    <Route exact path='/sign-in' component={() => { return <SignIn /> }} />\r\n                    <Route exact path='/sign-up' component={() => { return <SignUp /> }} />\r\n\r\n                </Switch>\r\n            </Router>\r\n        </HashRouter >\r\n    )\r\n    else {\r\n        return (\r\n            < HashRouter >\r\n                <Router>\r\n                    <Switch>\r\n                        <Route exact path='/' component={() => { return <SignIn /> }} />\r\n                    </Switch>\r\n                </Router>\r\n            </HashRouter >\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\n","import React from 'react';\nimport Auth from './Auth/Auth';\n\nfunction App() {\n\n\n  return (\n\n    <Auth />\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import uuid from 'react-uuid';\r\n// import * as actions from '../Actions/actions';\r\n\r\nconst initialState = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n    id: uuid()\r\n};\r\n\r\nconst usersList = []\r\n\r\nfunction rootReducer(state = initialState, actions) {\r\n    switch (actions.type) {\r\n        case 'ADD_FIRST_NAME':\r\n            return {\r\n                ...state,\r\n                firstName: actions.value\r\n            }\r\n        case 'ADD_LAST_NAME':\r\n            return {\r\n                ...state,\r\n                lastName: actions.value\r\n            }\r\n        case 'ADD_EMAIL':\r\n            return {\r\n                ...state,\r\n                email: actions.value\r\n            }\r\n        case 'ADD_PASSWORD':\r\n            return {\r\n                ...state,\r\n                password: actions.value\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './Reducers/rootReducer';\n\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/backGroundMain.3214051d.jpg\";"],"sourceRoot":""}