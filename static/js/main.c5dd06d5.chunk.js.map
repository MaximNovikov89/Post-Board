{"version":3,"sources":["Assest/Images/backGroundMain.jpg","components/Greeting-Page/greetingPage.js","firebase/firebase.utils.js","components/Sign-Up/SignUp.js","components/Sign-in/Sign-in.js","components/Home-Page/NavBar/Navbar.js","components/Home-Page/ProfileCard/ProfileCard.js","Actions/actions.js","components/Home-Page/Post-Card/PostCard2.js","components/Home-Page/Post-List/PostList.js","components/Home-Page/Modal/Modal.js","components/AddFriends/AddFriends.js","components/Home-Page/FriendsSearch/FriendsSearch.js","components/Home-Page/FriendsList/FriendsList.js","components/Home-Page/HomePage.js","App.js","serviceWorker.js","Reducers/rootReducer.js","index.js","Assest/Images/IconLogo.png"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","backGround","backgroundImage","height","backgroundRepeat","backgroundPosition","backgroundSize","backgroundAttachment","GreetingPage","classes","greetingText","className","to","Button","variant","color","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","provider","GoogleAuthProvider","setCustomParameters","prompt","createUserProfileDocument","userAuth","additionalData","a","userRef","doc","uid","get","exists","displayName","email","createdAt","Date","set","console","log","message","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignUp","useState","lastName","password","confirmPassword","photoURL","friends","userInfo","setUserInfo","history","useHistory","handleInputChange","event","target","name","value","handleSignUp","preventDefault","alert","createUserWithEmailAndPassword","catch","error","user","push","code","Container","component","maxWidth","CssBaseline","Avatar","Typography","noValidate","onSubmit","Grid","container","item","xs","sm","TextField","autoComplete","required","fullWidth","label","autoFocus","onChange","type","justify","Box","mt","SignIn","googleSignIn","signInWithPopup","handleChange","evt","handleSubmit","signInWithEmailAndPassword","FormControlLabel","control","Checkbox","onClick","Link","href","navBar","boxShadow","zIndex","maxHeight","padding","logoImg","cursor","navBarBrand","paddingLeft","fontSize","HomeNavbar","props","inputValue","setInputValue","handleSignOut","signOut","Navbar","Row","style","Col","src","Logo","alt","id","e","IconButton","handleSearch","media","paddingTop","ProfileCard","useSelector","state","friendsCount","setFriendsCount","useEffect","length","Card","CardHeader","avatarUrl","aria-label","title","userName","subheader","CardContent","CardActions","handleModal","PostCard2","post","border","author","textAlign","header","date","time","position","left","content","List","posts","postType","postListType","dispatch","useDispatch","sortedPosts","sort","b","exactTime","then","data","collection","globalPostsArr","docs","map","key","PostModal","modal","currentPost","setCurrentPost","setPosts","handleInput","element","uuid","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","Modal","isOpen","toggle","ModalHeader","ModalBody","FormGroup","Input","maxLength","placeholder","Label","for","FormText","ModalFooter","docRef","globalPosts","updatedPosts","update","add","AddFriends","friend","currentUser","emailArr","find","FriendsSearch","usersList","filteredUsersList","setFilteredUsersList","filtered","filter","toLowerCase","inputSearch","FriendsList","marginBottom","filteredFriends","handleDeleteFriend","HomePage","logo","logoUrl","primaryDiv","profileCard","setCurrentUser","isModal","setIsModal","PostList","screenView","setScreenView","goBack","overflowY","App","unsubscribeFromAuth","onAuthStateChanged","onSnapshot","snapShot","userArr","exact","path","Boolean","window","location","hostname","match","initialState","rootReducer","actions","store","createStore","Framework7","use","Framework7React","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c5dd06d5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/backGroundMain.3214051d.jpg\";","import React from 'react';\r\nimport './greetingPage.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport backgroundImage from '../../Assest/Images/backGroundMain.jpg';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    backGround: {\r\n        flexGrow: 1,\r\n        backgroundImage: `url(${backgroundImage})`,\r\n        height: '100vh',\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"center center\",\r\n        backgroundSize: \"cover\",\r\n        backgroundAttachment: \"fixed\",\r\n    },\r\n}));\r\n\r\nexport default function GreetingPage() {\r\n    const classes = useStyles();\r\n    const greetingText = ['Share your thoughts pictures and work ', <br />, 'or what ever is on your to mind'];\r\n\r\n\r\n    return (\r\n        <div className={classes.backGround}>\r\n            <div className='mainCoverGrid'>\r\n                <div className='mainCover'>\r\n                    <h1 className='mainHeader'>Post-Board</h1>\r\n                    <h3 className='mainSubHeader'>{greetingText}</h3>\r\n\r\n                    <Link to='/log-in' className='joinLink'>\r\n                        <Button variant=\"contained\" color=\"primary\" className='mainJoinButton'>Join</Button>\r\n                    </Link>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyB6wCwLDHN64azl4RtHquKZOFdwlHWTpq4\",\r\n    authDomain: \"post-board-d7b1e.firebaseapp.com\",\r\n    databaseURL: \"https://post-board-d7b1e.firebaseio.com\",\r\n    projectId: \"post-board-d7b1e\",\r\n    storageBucket: \"post-board-d7b1e.appspot.com\",\r\n    messagingSenderId: \"166063070185\",\r\n    appId: \"1:166063070185:web:d88d7c53cde9c81ed90978\",\r\n    measurementId: \"G-VLFW832SVZ\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n    if (!userAuth) return;\r\n\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n    const snapShot = await userRef.get()\r\n\r\n    //If userAuth true (firebase AUTH) but not exist yet in out Database\r\n    if (!snapShot.exists) {\r\n        const { displayName, email } = userAuth;\r\n        const createdAt = new Date();\r\n\r\n        try {\r\n            await userRef.set({\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                ...additionalData\r\n            })\r\n\r\n        } catch (error) {\r\n            console.log('Error Creating User', error.message);\r\n        }\r\n    }\r\n    return userRef;\r\n}\r\nexport default firebase;","import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\nimport { Link } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n// import { useSelector } from 'react-redux';\r\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignUp() {\r\n    const classes = useStyles();\r\n    const [userInfo, setUserInfo] = useState({\r\n        displayName: '',\r\n        email: '',\r\n        lastName: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        photoURL: 'https://www.jumpstarttech.com/files/2018/08/Network-Profile.png',\r\n        friends: []\r\n    });\r\n    const history = useHistory();\r\n\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setUserInfo({ ...userInfo, [name]: value });\r\n    }\r\n\r\n\r\n    //Sign-Up with email/Password firebase\r\n    const handleSignUp = async event => {\r\n        event.preventDefault();\r\n        const { displayName, email, password, confirmPassword, photoURL } = userInfo;\r\n        if (password !== confirmPassword) {\r\n            alert(\"password don't match\");\r\n            return;\r\n        }\r\n        try {\r\n            const { user } = await auth.createUserWithEmailAndPassword(email, password).catch(function (error) { console.log(error); });\r\n\r\n            await createUserProfileDocument(user, { displayName, photoURL });\r\n\r\n            setUserInfo({});\r\n            history.push('/log-in');\r\n        } catch (error) {\r\n            switch (error.code) {\r\n                case 'auth/invalid-email':\r\n                    alert(\"Email adress incorrect\")\r\n                    history.push(\"/sign-up\");\r\n                    break;\r\n                case 'auth/email-already-in-use':\r\n                    alert(\"Email already in use\")\r\n                    history.push(\"/sign-up\");\r\n                    break;\r\n                case 'auth/weak-password':\r\n                    alert('Password must be at least 8 characters long')\r\n                    history.push(\"/sign-up\");\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign up\r\n        </Typography>\r\n                <form className={classes.form} noValidate onSubmit={handleSignUp}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                autoComplete=\"fname\"\r\n                                name=\"displayName\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                label=\"First Name\"\r\n                                // value={userInfo.displayName}\r\n                                autoFocus\r\n                                onChange={handleInputChange}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                label=\"Last Name\"\r\n                                name=\"lastName\"\r\n                                autoComplete=\"lname\"\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"confirmPassword\"\r\n                                label=\"Confirm Password\"\r\n                                type=\"password\"\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign Up\r\n          </Button>\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link to=\"/log-in\" variant=\"body2\">\r\n                                Already have an account? Sign in\r\n              </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={5}>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\r\n// import { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignIn() {\r\n\r\n    //==========States=========//\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const [userInfo, setUserInfo] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    //==========useEffect=========//\r\n\r\n\r\n    //==========Methods=========//\r\n    const googleSignIn = async (event) => {\r\n        event.preventDefault();\r\n        await signInWithGoogle();\r\n        history.push('/homepage');\r\n    };\r\n\r\n    const handleChange = (evt) => {\r\n        setUserInfo({\r\n            ...userInfo,\r\n            [evt.target.name]: evt.target.value\r\n        })\r\n    }\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n        const { email, password } = userInfo;\r\n        try {\r\n            await auth.signInWithEmailAndPassword(email, password);\r\n            setUserInfo({ email: '', password: '' });\r\n            history.push('/homepage');\r\n        } catch (error) {\r\n            if (error.code === 'auth/user-not-found') {\r\n                alert(\"You have not registered yet\")\r\n            }\r\n            if (error.code === 'auth/wrong-password') {\r\n                alert(\"Wrong Password try again\")\r\n            }\r\n            else {\r\n                console.log(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                 </Typography>\r\n                <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n                    <TextField\r\n                        onChange={handleChange}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"off\"\r\n\r\n                    />\r\n                    <TextField\r\n                        onChange={handleChange}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        autoComplete=\"current-password\"\r\n\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                        label=\"Remember me\"\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={googleSignIn}\r\n                    >\r\n                        Sign In With Google\r\n                    </Button>\r\n                    <Grid container>\r\n                        {/* <Grid item xs>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                Forgot password?\r\n                             </Link>\r\n                        </Grid> */}\r\n                        <Grid item>\r\n                            <Link href=\"#/sign-up\" variant=\"body2\">\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport {\r\n    Navbar,\r\n    NavbarBrand,\r\n    Row,\r\n    Col,\r\n} from 'reactstrap';\r\nimport { makeStyles, Avatar } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { auth } from '../../../firebase/firebase.utils';\r\nimport Logo from '../../../Assest/Images/IconLogo.png';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '22ch',\r\n        }\r\n    },\r\n    navBar: {\r\n        backgroundColor: '#E0FBFC',\r\n        boxShadow: \"2px 3px 3px 0px rgba(108, 105, 112,0.25),0px 10px 25px 0px rgba(110, 120, 130,5)\",\r\n        zIndex: '2',\r\n        maxHeight: '5rem',\r\n        padding: '0.6rem',\r\n    },\r\n    logoImg: { //Broken responsivness - ***FIX***\r\n        // width: '4.5rem',\r\n        // position: 'relative',\r\n        // color: 'black',\r\n        cursor: 'pointer',\r\n        width: theme.spacing(19),\r\n        height: theme.spacing(19),\r\n    },\r\n    navBarBrand: {\r\n        paddingLeft: '15px',\r\n        cursor: 'default',\r\n        fontSize: '25px'\r\n    },\r\n}));\r\n\r\nconst HomeNavbar = (props) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n\r\n    //==========Methods=========//\r\n\r\n    const handleSignOut = async () => {\r\n        await auth.signOut();\r\n        history.push('/log-in');\r\n    }\r\n\r\n    const startSearch = (e) => {\r\n        props.handleSearch(e, inputValue);\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <Navbar className={classes.navBar} >\r\n            <Row style={{ width: '100%' }}>\r\n                <Col xs='1'></Col>\r\n\r\n                <Col xs='1' >\r\n                    <Avatar className={classes.logoImg} src={Logo} alt='logo' onClick={() => history.push('/homepage')}></Avatar>\r\n                </Col>\r\n\r\n                <Col xs='2' style={{ paddingLeft: '0' }}></Col>\r\n\r\n                <Col xs='3'>\r\n                    {/* <NavbarBrand className={classes.navBarBrand}>Post-Board</NavbarBrand> */}\r\n\r\n                </Col>\r\n\r\n                <Col xs='3'>\r\n                    <TextField\r\n                        id=\"standard-basic\"\r\n                        label=\"Search friends\"\r\n                        onChange={(e) => setInputValue(e.target.value)}\r\n                        autoComplete=\"off\" />\r\n\r\n                    {/* //Broken responsivness - ***FIX*** */}\r\n                    <IconButton color=\"primary\" component=\"span\" style={{ marginTop: '0.5rem' }} onClick={() => startSearch('friends')}>\r\n                        <SearchIcon />\r\n                    </IconButton>\r\n                </Col>\r\n\r\n                <Col xs='1'>\r\n                    <IconButton color=\"secondary\" component=\"span\" onClick={handleSignOut}><ExitToAppIcon /></IconButton>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Navbar >\r\n    );\r\n}\r\n\r\nexport default HomeNavbar;\r\n\r\n//<a href='https://pngtree.com/so/icon'>icon png from pngtree.com</a>\r\n","// import React, { useState, useEffect } from 'react';\r\n// import './ProfileCard.scss';\r\n// import { useSelector } from 'react-redux';\r\n// import CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\n// export default function ProfileCard(props) {\r\n\r\n\r\n//     const user = useSelector(state => state.user);\r\n//     const [friendsCount, setFriendsCount] = useState(0);\r\n\r\n//     useEffect(() => {\r\n//         if (user.friends) {\r\n//             setFriendsCount(user.friends.length)\r\n//         }\r\n//     }, [])\r\n\r\n//     const handleOpenModal = () => {\r\n//         props.handleModal();\r\n//     }\r\n//     console.log(user);\r\n//     return (\r\n\r\n//         <div>\r\n//             <div className=\"profileCard\">\r\n//                 <img src={props.avatarUrl} alt=\"avatar\" className=\"profileCard__image\" />\r\n//                 <p className=\"card__name\">{props.userName}</p>\r\n\r\n//                 <div className=\"grid-container\">\r\n//                     <div className=\"grid-child-followers\">\r\n//                         {`${friendsCount} Friends`}\r\n//                     </div>\r\n//                 </div>\r\n//                 <div>\r\n//                     <IconButton style={{ width: '60px' }} onClick={handleOpenModal}><CloudUploadIcon style={{ width: '60px' }} /></IconButton>\r\n//                 </div>\r\n\r\n//             </div>\r\n\r\n\r\n//         </div>\r\n\r\n\r\n//     )\r\n// }\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n    makeStyles,\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    CardActions,\r\n    Avatar,\r\n    IconButton,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CloudUploadOutlinedIcon from '@material-ui/icons/CloudUploadOutlined';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '80%',\r\n        height: '30%',\r\n        maxWidth: 500,\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n}));\r\n\r\nexport default function ProfileCard(props) {\r\n    const classes = useStyles();\r\n\r\n    const user = useSelector(state => state.user);\r\n    const [friendsCount, setFriendsCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (user.friends) {\r\n            setFriendsCount(user.friends.length)\r\n        }\r\n    }, [])\r\n\r\n    const handleOpenModal = () => {\r\n        props.handleModal();\r\n    }\r\n\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar src={props.avatarUrl} aria-label=\"recipe\" >\r\n\r\n                    </Avatar>\r\n                }\r\n\r\n                title={props.userName}\r\n                subheader=\"Optional Content\"\r\n            />\r\n            <CardContent>\r\n                <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\r\n                    {`${friendsCount} Friends`}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions >\r\n                <IconButton component=\"span\">\r\n                    <CloudUploadOutlinedIcon fontSize=\"large\" onClick={handleOpenModal} />\r\n                </IconButton>\r\n            </CardActions>\r\n\r\n        </Card>\r\n    );\r\n}\r\n","export const ADD_USER_OBJ = 'ADD_USER_OBJ';\r\nexport const SET_POST_LIST_TYPE = 'SET_POST_LIST_TYPE';\r\nexport const SET_POSTS = 'SET_POSTS';\r\nexport const SET_FRIENDS_LIST = 'SET_FRIENDS_LIST';\r\n\r\n","import React from 'react';\r\nimport ThumbUpAlt from '@material-ui/icons/ThumbUpAlt';\r\nimport TextsmsOutlinedIcon from '@material-ui/icons/TextsmsOutlined';\r\nimport EventNoteTwoToneIcon from '@material-ui/icons/EventNoteTwoTone';\r\nimport { Card, CardHeader, CardContent, CardFooter, Link, Row, Col } from 'framework7-react';\r\n\r\n\r\n\r\n\r\nexport default function PostCard2(props) {\r\n    const post = props.post;\r\n    return (\r\n        <Card style={{ margin: '0 0 20px 20px', border: '1px solid black', width: '75%' }\r\n        }>\r\n\r\n            <CardHeader style={{ backgroundColor: '#8ebfde' }}>\r\n                <Row>\r\n                    <Col>\r\n                        <div ><img src={post.photoURL} width=\"34\" height=\"34\" /><span style={{ padding: '15px' }}>{post.author}</span></div>\r\n                    </Col>\r\n                    <Col ><div style={{ textAlign: 'center', fontSize: 20 }} >{post.header}</div></Col>\r\n                    <Col style={{ textAlign: 'end' }}><EventNoteTwoToneIcon />{post.createdAt.date}<br />{post.createdAt.time}</Col>\r\n                </Row>\r\n            </CardHeader>\r\n\r\n\r\n            <CardContent>\r\n                <Row style={{ position: 'relative', left: '15px' }}>\r\n                    <Col style={{ padding: '10px' }}>{post.content}</Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col></Col>\r\n                    <Col width=\"7\">\r\n                        <img src={\"https://cdn.framework7.io/placeholder/nature-1000x700-8.jpg\"} width=\"100%\" />\r\n                    </Col>\r\n                    <Col></Col>\r\n                </Row>\r\n                {/* <p style={{ padding: '10px 0 0 10px' }}>{post.content}</p> */}\r\n                {/* <img style={{ paddingLeft: '120px' }} src={\"https://cdn.framework7.io/placeholder/nature-1000x700-8.jpg\"} width=\"80%\" /> */}\r\n                <Row>\r\n                    <Col>\r\n                        <p style={{ padding: '10px 0 0 10px' }}><ThumbUpAlt />  112 &nbsp;&nbsp; <TextsmsOutlinedIcon /> 43</p>\r\n                    </Col>\r\n                </Row>\r\n            </CardContent>\r\n\r\n\r\n            <CardFooter className=\"no-border\">\r\n                <Link>Like</Link>\r\n                <Link>Comment</Link>\r\n            </CardFooter>\r\n\r\n        </Card >\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport firebase from \"firebase/app\";\r\nimport * as actions from '../../../Actions/actions';\r\nimport PostCard2 from '../Post-Card/PostCard2';\r\n\r\n\r\n\r\n\r\nconst List = () => {\r\n\r\n    //==========States=========//\r\n    const user = useSelector(state => state.user);\r\n    const posts = useSelector(state => state.posts);\r\n    const postType = useSelector(state => state.postListType);\r\n\r\n    const dispatch = useDispatch();\r\n    var sortedPosts = posts.sort((a, b) => (a.exactTime > b.exactTime) ? -1 : 1);\r\n\r\n    //==========useEffect=========//\r\n\r\n    //  Fetching Data from firebase and updating postList  //\r\n    useEffect(() => {\r\n        if (postType === 'users') {\r\n            try {\r\n                //tries to access specific user document in the database using current user ID.\r\n                firebase\r\n                    .firestore()\r\n                    .doc(`users/${user.uid}`)\r\n                    .get()\r\n                    .then(function (doc) {\r\n\r\n                        if (doc.exists) {\r\n                            let data = doc.data();\r\n                            dispatch({ type: actions.SET_POSTS, value: data.posts });\r\n                        }\r\n                        else {\r\n                            // doc.data() will be undefined in this case\r\n                            console.log(\"No such document!\");\r\n                        }\r\n\r\n                    }).catch(function (error) {\r\n                        console.log(\"Error getting document:\", error);\r\n                    })\r\n            }\r\n            catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        else {\r\n            try {\r\n                //tries to access Global post collection in the database, Setting global post list.\r\n                firebase\r\n                    .firestore()\r\n                    .collection('globalPosts')\r\n                    .get()\r\n                    .then(function (doc) {\r\n                        if (doc) {\r\n\r\n                            let globalPostsArr = [];\r\n                            let data = doc.docs;\r\n\r\n                            data.map(post => {\r\n                                globalPostsArr.push(post.data())\r\n                            })\r\n                            dispatch({ type: actions.SET_POSTS, value: globalPostsArr });\r\n                        }\r\n                        else {\r\n                            // doc.data() will be undefined in this case\r\n                            console.log(\"No such document!\");\r\n                        }\r\n\r\n                    }).catch(function (error) {\r\n                        console.log(\"Error getting document:\", error);\r\n                    })\r\n            }\r\n            catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        return () => { }\r\n    }, [postType]);\r\n\r\n\r\n\r\n    //  Setting Display List  //\r\n    // useEffect(() => {\r\n    //     if (posts) {\r\n    //         if (!displayList) {\r\n    //             setDisplayList(<div />)\r\n    //         }\r\n    //     }\r\n    // }, []);\r\n\r\n    return (\r\n        <div>\r\n            {sortedPosts.map(post =>\r\n\r\n                <PostCard2 key={post.id} post={post} user={user} />\r\n\r\n\r\n            )}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default List;","import React, { useState, useEffect } from 'react';\r\nimport uuid from 'react-uuid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Input, Label, FormText } from 'reactstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport firebase from \"firebase/app\";\r\n// import UploadImage from '../Image-Uploader/ImageUploader';\r\n\r\n\r\nconst PostModal = (props) => {\r\n    const {\r\n        className\r\n    } = props;\r\n    //==========States=========//\r\n    const [modal] = useState(true);\r\n    const [currentPost, setCurrentPost] = useState({});\r\n    const [posts, setPosts] = useState([]);\r\n    const user = useSelector(state => state.user);\r\n\r\n    //==========useEffect=========//\r\n    useEffect(() => {\r\n        //  Fetching Data from firebase and updating component's state  //\r\n        firebase\r\n            .firestore()\r\n            .doc(`users/${user.uid}`)\r\n            .get()\r\n            .then(function (doc) {\r\n\r\n                if (doc.exists) {\r\n                    let data = doc.data();\r\n                    setPosts(data.posts);\r\n                }\r\n                else {\r\n                    // doc.data() will be undefined in this case\r\n                    console.log(\"No such document!\");\r\n                }\r\n\r\n            }).catch(function (error) {\r\n                console.log(\"Error getting document:\", error);\r\n            });\r\n    }, [])\r\n\r\n\r\n    //==========Methods=========//\r\n    const handleInput = (element) => {\r\n        setCurrentPost({\r\n            ...currentPost,\r\n            id: uuid(),\r\n            [element.target.name]: element.target.value,\r\n            photoURL: user.photoURL,\r\n            createdAt: {\r\n                date: new Date().getDate() + '-' + (new Date().getMonth() + 1) + '-' + new Date().getFullYear(),\r\n                time: new Date().getHours() + \":\" + new Date().getMinutes(),\r\n            },\r\n            exactTime: new Date().getDate() + '-' + (new Date().getMonth() + 1) + '-' + new Date().getFullYear() + new Date().getHours() + \":\" + new Date().getMinutes() + \":\" + new Date().getSeconds()\r\n\r\n        })\r\n    }\r\n    //post to database//\r\n    const handlePost = () => {\r\n\r\n        const docRef = firebase.firestore().doc(`users/${user.uid}`);\r\n        const globalPosts = firebase.firestore().collection('globalPosts');\r\n\r\n        //Accessing specific user document, Adding post to user document. \r\n        docRef\r\n            .get()\r\n            .then(\r\n                function (doc) {\r\n                    let data = doc.data();\r\n                    if (data.posts) {\r\n\r\n                        let updatedPosts = posts;\r\n                        updatedPosts.push(currentPost);\r\n\r\n                        docRef.update({\r\n                            posts: updatedPosts\r\n                        })\r\n                        globalPosts.add({ author: `${user.displayName}`, ...currentPost })\r\n                    }\r\n                    else {\r\n                        docRef.update({\r\n                            posts: [currentPost]\r\n                        })\r\n                        globalPosts.add({ author: `${user.displayName}`, ...currentPost })\r\n                    }\r\n                }\r\n            );\r\n        props.handleModal();\r\n    }\r\n    // const addPicture = (pic) => {\r\n    //     setCurrentPost(prevState => ({ ...prevState, image: pic }));\r\n    // }\r\n    return (\r\n        <div>\r\n            {/* <Button color=\"danger\" onClick={toggle}>{buttonLabel}</Button> */}\r\n            <Modal isOpen={modal} toggle={props.handleModal} className={className}>\r\n\r\n                <ModalHeader toggle={props.handleModal}>\r\n                    <TextField\r\n                        id=\"standard-basic\"\r\n                        label=\"Post Header\"\r\n                        name=\"header\"\r\n                        onChange={handleInput} />\r\n                </ModalHeader>\r\n\r\n\r\n                <ModalBody>\r\n                    <FormGroup >\r\n                        <Input\r\n                            style={{ height: '10rem' }}\r\n                            type=\"textarea\"\r\n                            id=\"exampleText\"\r\n                            name=\"content\"\r\n                            onChange={handleInput}\r\n                            maxLength={200}\r\n                            placeholder='You say...' />\r\n\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"exampleFile\">Photo</Label>\r\n                        <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\r\n                        <FormText color=\"muted\">\r\n                            Upload Your Photo here.\r\n        </FormText>\r\n                    </FormGroup>\r\n                </ModalBody>\r\n\r\n\r\n                {/* <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"Add picture...\"\r\n                    name=\"header\"\r\n                    disabled />\r\n                <UploadImage singleImage addPicture={addPicture} /> */}\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={handlePost}>Post</Button>\r\n                    <Button color=\"secondary\" onClick={props.handleModal}> Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostModal;","import React from 'react';\r\nimport { Card, CardHeader, } from 'framework7-react';\r\nimport { useSelector } from 'react-redux';\r\nimport firebase from \"firebase/app\";\r\n\r\n\r\n\r\n\r\nexport default function AddFriends(props) {\r\n    const friend = props.user;\r\n    const currentUser = useSelector(state => state.user);\r\n\r\n    //==========Methods=========//\r\n    // const back = () => {\r\n    //     props.goBack('back');\r\n    // }\r\n    const handleAddFriend = () => {\r\n        const docRef = firebase.firestore().doc(`users/${currentUser.uid}`);\r\n\r\n        docRef\r\n            .get()\r\n            .then(\r\n                function (doc) {\r\n                    let data = doc.data();\r\n\r\n                    try {\r\n                        if (data.friends) {\r\n                            //Creating friends emails Array \r\n                            let emailArr = []\r\n                            data.friends.map(element => {\r\n                                emailArr.push(element.email)\r\n                            })\r\n                            //Searching if the current is already friends with this friend.\r\n                            //*This friend = searched friend.\r\n                            let friendExist = false;\r\n                            friendExist = emailArr.find(e => e === friend.email)\r\n                            if (friendExist) {\r\n                                alert(`${friend.displayName} is already a friend`);\r\n                                friendExist = false;\r\n                            }\r\n                            else {\r\n\r\n                                docRef.update({\r\n                                    ...data,\r\n                                    friends: [...data.friends, friend]\r\n                                })\r\n                            }\r\n                        }\r\n                        else {\r\n                            docRef.set({ ...data, friends: [friend] });\r\n                        }\r\n\r\n                    }\r\n                    catch (error) {\r\n                        console.log(`Error adding Friend ${error}`);\r\n                    }\r\n                });\r\n        // back();\r\n    };\r\n\r\n    return (\r\n\r\n        <Card >\r\n            <CardHeader className=\"no-border\">\r\n                <span >\r\n                    <img src={friend.photoURL} width=\"34\" height=\"34\" /></span>\r\n                <span >{friend.displayName}</span>\r\n            </CardHeader>\r\n\r\n\r\n            <button onClick={handleAddFriend}>Add Friend</button>\r\n\r\n\r\n        </Card>\r\n\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport AddFriends from '../../AddFriends/AddFriends';\r\n\r\n\r\nexport default function FriendsSearch(props) {\r\n    //==========States=========//\r\n    const usersList = useSelector(state => state.usersList);\r\n    const [filteredUsersList, setFilteredUsersList] = useState([]);\r\n\r\n    //==========UseEffect==========//\r\n    useEffect(() => {\r\n        let filtered = usersList.filter(user => user.displayName.toLowerCase() === props.inputSearch.toLowerCase())\r\n        setFilteredUsersList(filtered);\r\n\r\n    }, [props])\r\n\r\n\r\n    // let usersArr = filteredUsersList.map(user =>\r\n    //     <div>{user.desplayName}</div>\r\n    // )\r\n    return (\r\n\r\n        filteredUsersList ? filteredUsersList.map(user =>\r\n            <div key={user.email}>{user ? <AddFriends user={user} /> : 'No user Found...'}</div>\r\n        ) : <div>False</div>\r\n    )\r\n\r\n\r\n}\r\n","import React from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport firebase from \"firebase/app\";\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\n\r\n\r\n\r\nexport default function FriendsList(props) {\r\n    const friends = props.currentUser.friends;\r\n    const currentUser = useSelector(state => state.user);\r\n\r\n\r\n    const handleDeleteFriend = (email) => {\r\n        const docRef = firebase.firestore().doc(`users/${currentUser.uid}`);\r\n\r\n        docRef\r\n            .get()\r\n            .then(\r\n                function (doc) {\r\n                    let data = doc.data();\r\n\r\n                    try {\r\n                        if (data.friends) {\r\n                            //Filtering friends Array.\r\n                            let filteredFriends = data.friends.filter(friend => friend.email !== email);\r\n\r\n                            //Updating fridns Array in the database.\r\n                            docRef.update({\r\n                                ...data,\r\n                                friends: filteredFriends\r\n                            })\r\n                        }\r\n                    }\r\n                    catch (error) {\r\n                        console.log(`Error Deleting Friend ${error}`);\r\n                    }\r\n                });\r\n    }\r\n    return (\r\n        <>\r\n            <Row style={{ marginTop: '2rem' }}>\r\n                <Col xs='3' />\r\n\r\n                <Col xs='6'><h3>Friends</h3></Col>\r\n                {/* import ContactsIcon from '@material-ui/icons/Contacts'; */}\r\n                <Col xs='3' />\r\n            </Row>\r\n            {friends ? friends.map(friend =>\r\n                <Row key={friend.displayName} style={{ marginBottom: '10px' }}>\r\n                    <Col xs='1'><img src={friend.photoURL} width=\"34\" height=\"35\" /></Col>\r\n                    <Col xs='1' />\r\n                    <Col xs='5'><p>{friend.displayName}</p></Col>\r\n                    <Col xs='1'>\r\n                        <IconButton\r\n                            component=\"span\"\r\n                            style={{\r\n                                marginBottom: '5px',\r\n                                padding: '0px 4px 3px 4px'\r\n                            }}\r\n                            onClick={() => handleDeleteFriend(friend.email)}>\r\n                            <HighlightOffIcon /></IconButton></Col>\r\n                </Row>\r\n            ) : <div></div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Row, Col } from 'reactstrap';\r\nimport HomeNavbar from './NavBar/Navbar';\r\nimport { useSelector } from 'react-redux';\r\nimport ProfileCard from './ProfileCard/ProfileCard';\r\nimport Logo from '../../Assest/Images/IconLogo.png';\r\nimport PostList from './Post-List/PostList';\r\nimport PostModal from './Modal/Modal';\r\nimport FriendsSearch from './FriendsSearch/FriendsSearch';\r\nimport FriendsList from './FriendsList/FriendsList';\r\n\r\n\r\nexport default function HomePage() {\r\n\r\n    //==========Styles-MaterialUI==========//\r\n    const useStyles = makeStyles((theme) => ({\r\n        logo: {\r\n            width: '70px',\r\n            height: '70px'\r\n        },\r\n        logoUrl: {\r\n            backgroundImage: `url(${Logo})`,\r\n        },\r\n        primaryDiv: {\r\n            backgroundColor: '#f5f5f5',\r\n            height: '100vh',\r\n            width: '100%'\r\n        },\r\n        profileCard: {\r\n            marginTop: '6.2%',\r\n        }\r\n    }));\r\n    const classes = useStyles();\r\n\r\n\r\n    //==========States=========//\r\n    const [currentUser, setCurrentUser] = useState({});\r\n    const user = useSelector(state => state.user);\r\n    const [isModal, setIsModal] = useState(false);\r\n    const [screenView, setScreenView] = useState(<PostList />)\r\n\r\n    //==========UseEffect==========//\r\n    useEffect(() => {\r\n        if (user) {\r\n            setCurrentUser(user);\r\n        }\r\n    }, [user]);\r\n\r\n    //==========Methods=========//\r\n    const handleModal = () => {\r\n        setIsModal(!isModal);\r\n    }\r\n    const handleSearch = (type, value) => {\r\n        if (type === 'friends') {\r\n            setScreenView(<FriendsSearch inputSearch={value} goBack={handleSearch} />);\r\n        }\r\n        else {\r\n            setScreenView(<PostList />);\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.primaryDiv} >\r\n            <Row>\r\n                <Col xs='12' >\r\n                    <HomeNavbar handleSearch={handleSearch} />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row style={{ margin: 0 }} className={classes.primaryDiv}>\r\n\r\n                <Col xs='3' className={`d-flex justify-content-center ${classes.profileCard}`}>\r\n                    <ProfileCard\r\n\r\n                        avatarUrl={currentUser.photoURL}\r\n                        userName={currentUser.displayName}\r\n                        handleModal={handleModal} />\r\n                </Col>\r\n\r\n                <Col xs='7'>\r\n\r\n                    <Row >\r\n                        <Col xs='12' style={{ overflowY: 'scroll', maxHeight: '90vh', padding: '2rem' }}>\r\n\r\n                            {isModal ? <PostModal handleModal={handleModal} /> : screenView}\r\n\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Col>\r\n\r\n\r\n                <Col xs='2' style={{ backgroundColor: '#E0FBFC', zIndex: '1' }}>\r\n                    <FriendsList currentUser={currentUser} />\r\n                </Col>\r\n\r\n\r\n            </Row>\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\n// Credits:\r\n{/* <a href='https://pngtree.com/so/hanging-bulletin-board'>hanging-bulletin-board png from pngtree.com</a> */ }","import React, { useEffect, useState } from 'react'\nimport { HashRouter as Router, Switch, Route, HashRouter } from 'react-router-dom';\nimport GreetingPage from './components/Greeting-Page/greetingPage';\nimport SignUp from './components/Sign-Up/SignUp';\nimport SignIn from './components/Sign-in/Sign-in';\nimport HomePage from './components/Home-Page/HomePage';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport firebase from \"firebase/app\";\nimport { useDispatch } from 'react-redux';\nimport * as actions from './Actions/actions';\n\n\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(null);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n\n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n            ...userAuth,\n            ...snapShot.data()\n          });\n        });\n      }\n      else {\n        setCurrentUser(userAuth);\n      }\n    });\n    return () => {\n      unsubscribeFromAuth();\n    }\n  }, []);\n  dispatch({ type: actions.ADD_USER_OBJ, value: currentUser });\n\n\n  useEffect(() => {\n    //tries to access Users Collection and storing users Array in the Store.\n    try {\n\n      firebase\n        .firestore()\n        .collection(`users`)\n        .get()\n        .then(function (doc) {\n          let userArr = doc.docs.map(user => user.data());\n          dispatch({ type: actions.SET_FRIENDS_LIST, value: userArr });\n        })\n        .catch(function (error) {\n          console.log(\"Error getting document:\", error);\n        })\n    }\n    catch (error) {\n      console.log(error);\n    }\n\n  }, [currentUser]);\n\n  return (\n\n    < HashRouter >\n      <Router>\n        <Switch>\n\n          <Route exact path=\"/\" component={() => { return <GreetingPage /> }} />\n          <Route exact path=\"/homepage\" component={() => { return <HomePage /> }} />\n          <Route exact path='/log-in' component={() => { return <SignIn /> }} />\n          <Route exact path='/sign-up' component={() => { return <SignUp /> }} />\n\n        </Switch>\n      </Router>\n    </HashRouter >\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\nconst initialState = {\r\n    user: null,\r\n    postListType: 'global',\r\n    posts: [],\r\n};\r\n\r\nfunction rootReducer(state = initialState, actions) {\r\n    switch (actions.type) {\r\n\r\n        case 'ADD_USER_OBJ':\r\n            return {\r\n                ...state,\r\n                user: actions.value\r\n            }\r\n\r\n        case 'SET_POST_LIST_TYPE':\r\n            return {\r\n                postListType: actions.value,\r\n                ...state\r\n\r\n\r\n            }\r\n\r\n        case 'SET_POSTS':\r\n            return {\r\n                ...state,\r\n                posts: actions.value\r\n            }\r\n        case 'SET_FRIENDS_LIST':\r\n            return {\r\n                ...state,\r\n                usersList: actions.value\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './Reducers/rootReducer';\nimport Framework7 from 'framework7/framework7-lite.esm.bundle.js';\nimport Framework7React from 'framework7-react';\n\n\nconst store = createStore(rootReducer);\nFramework7.use(Framework7React);\n\nReactDOM.render(\n  <React.StrictMode> <Provider store={store}>\n\n    <App />\n\n  </Provider></React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/IconLogo.3c247b46.png\";"],"sourceRoot":""}