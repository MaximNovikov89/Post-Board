{"version":3,"sources":["Assest/Images/backGroundMain.jpg","Greeting-Page/greetingPage.js","firebase/firebase.utils.js","Sign-Up/SignUp.js","Sign-in/Sign-in.js","Home-Page/NavBar/Navbar.js","Home-Page/HomePage.js","App.js","Actions/actions.js","serviceWorker.js","Reducers/rootReducer.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","backGround","backgroundImage","height","backgroundRepeat","backgroundPosition","backgroundSize","backgroundAttachment","GreetingPage","classes","className","to","Button","variant","color","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","provider","GoogleAuthProvider","setCustomParameters","prompt","createUserProfileDocument","userAuth","additionalData","a","userRef","doc","uid","get","exists","displayName","email","createdAt","Date","set","console","log","message","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignUp","useState","lastName","password","confirmPassword","userInfo","setUserInfo","history","useHistory","handleInputChange","event","target","name","value","handleSignUp","preventDefault","alert","createUserWithEmailAndPassword","catch","error","user","push","code","Container","component","maxWidth","CssBaseline","Avatar","Typography","noValidate","onSubmit","Grid","container","item","xs","sm","TextField","autoComplete","required","fullWidth","label","autoFocus","onChange","type","justify","Box","mt","SignIn","googleSignIn","signInWithPopup","handleChange","evt","handleSubmit","signInWithEmailAndPassword","FormControlLabel","control","Checkbox","onClick","Link","href","HomeNavbar","props","isOpen","setIsOpen","Navbar","light","expand","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","HomePage","currentUser","setCurrentUser","useSelector","state","useEffect","Row","Col","style","App","dispatch","useDispatch","unsubscribeFromAuth","onAuthStateChanged","onSnapshot","snapShot","id","data","signOut","exact","path","Boolean","window","location","hostname","match","initialState","rootReducer","actions","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.708ad975.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/backGroundMain.3214051d.jpg\";","import React from 'react';\r\nimport './greetingPage.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport backgroundImage from '../Assest/Images/backGroundMain.jpg';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    backGround: {\r\n        flexGrow: 1,\r\n        backgroundImage: `url(${backgroundImage})`,\r\n        height: '100vh',\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"center center\",\r\n        backgroundSize: \"cover\",\r\n        backgroundAttachment: \"fixed\",\r\n    },\r\n}));\r\n\r\nexport default function GreetingPage() {\r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n\r\n        <div className={classes.backGround}>\r\n            <div className='mainCoverGrid'>\r\n                <div className='mainCover'>\r\n                    <h1 className='mainHeader'>Post-Board</h1>\r\n                    <h3 className='mainSubHeader'>Share your thoughts pictures and work or what ever is on your to mind</h3>\r\n\r\n                    <Link to='/log-in' className='joinLink'>\r\n                        <Button variant=\"contained\" color=\"primary\" className='mainJoinButton'>Join</Button>\r\n                    </Link>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyB6wCwLDHN64azl4RtHquKZOFdwlHWTpq4\",\r\n    authDomain: \"post-board-d7b1e.firebaseapp.com\",\r\n    databaseURL: \"https://post-board-d7b1e.firebaseio.com\",\r\n    projectId: \"post-board-d7b1e\",\r\n    storageBucket: \"post-board-d7b1e.appspot.com\",\r\n    messagingSenderId: \"166063070185\",\r\n    appId: \"1:166063070185:web:d88d7c53cde9c81ed90978\",\r\n    measurementId: \"G-VLFW832SVZ\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n    if (!userAuth) return;\r\n\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n    const snapShot = await userRef.get()\r\n\r\n    //If userAuth true (firebase AUTH) but not exist yet in out Database\r\n    if (!snapShot.exists) {\r\n        const { displayName, email } = userAuth;\r\n        const createdAt = new Date();\r\n\r\n        try {\r\n            await userRef.set({\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                ...additionalData\r\n            })\r\n\r\n        } catch (error) {\r\n            console.log('Error Creating User', error.message);\r\n        }\r\n    }\r\n    return userRef;\r\n}\r\nexport default firebase;","import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\nimport { Link } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n// import { useSelector } from 'react-redux';\r\nimport { auth, createUserProfileDocument } from '../firebase/firebase.utils';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignUp() {\r\n    const classes = useStyles();\r\n    const [userInfo, setUserInfo] = useState({\r\n        displayName: '',\r\n        email: '',\r\n        lastName: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    });\r\n    const history = useHistory();\r\n\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setUserInfo({ ...userInfo, [name]: value });\r\n    }\r\n\r\n\r\n    //Sign-Up with email/Password firebase\r\n    const handleSignUp = async event => {\r\n        event.preventDefault();\r\n        const { displayName, email, password, confirmPassword } = userInfo;\r\n        console.log(displayName);\r\n        if (password !== confirmPassword) {\r\n            alert(\"password don't match\");\r\n            return;\r\n        }\r\n        try {\r\n            const { user } = await auth.createUserWithEmailAndPassword(email, password).catch(function (error) { console.log(error); });\r\n\r\n            await createUserProfileDocument(user, { displayName });\r\n\r\n            setUserInfo({});\r\n            history.push('/log-in');\r\n        } catch (error) {\r\n            switch (error.code) {\r\n                case 'auth/invalid-email':\r\n                    alert(\"Email adress incorrect\")\r\n                    history.push(\"/sign-up\");\r\n                    break;\r\n                case 'auth/email-already-in-use':\r\n                    alert(\"Email already in use\")\r\n                    history.push(\"/sign-up\");\r\n                    break;\r\n                case 'auth/weak-password':\r\n                    alert('Password must be at least 8 characters long')\r\n                    history.push(\"/sign-up\");\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign up\r\n        </Typography>\r\n                <form className={classes.form} noValidate onSubmit={handleSignUp}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                autoComplete=\"fname\"\r\n                                name=\"displayName\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                label=\"First Name\"\r\n                                // value={userInfo.displayName}\r\n                                autoFocus\r\n                                onChange={handleInputChange}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                label=\"Last Name\"\r\n                                name=\"lastName\"\r\n                                autoComplete=\"lname\"\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"confirmPassword\"\r\n                                label=\"Confirm Password\"\r\n                                type=\"password\"\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign Up\r\n          </Button>\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link to=\"/log-in\" variant=\"body2\">\r\n                                Already have an account? Sign in\r\n              </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={5}>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { auth, signInWithGoogle } from '../firebase/firebase.utils';\r\n// import { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignIn() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [userInfo, setUserInfo] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    // const userName = useSelector((state) => state.name);\r\n    // const dispatch = useDispatch();\r\n\r\n    const googleSignIn = async (event) => {\r\n        event.preventDefault();\r\n        await signInWithGoogle();\r\n        history.push('/homePage');\r\n    };\r\n\r\n    const handleChange = (evt) => {\r\n        setUserInfo({\r\n            ...userInfo,\r\n            [evt.target.name]: evt.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n        const { email, password } = userInfo;\r\n        console.log(email, password);\r\n        try {\r\n            await auth.signInWithEmailAndPassword(email, password);\r\n            setUserInfo({ email: '', password: '' });\r\n            history.push('/homepage')\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                 </Typography>\r\n                <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n                    <TextField\r\n                        onChange={handleChange}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"off\"\r\n\r\n                    />\r\n                    <TextField\r\n                        onChange={handleChange}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        autoComplete=\"current-password\"\r\n\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                        label=\"Remember me\"\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={googleSignIn}\r\n                    >\r\n                        Sign In With Google\r\n                    </Button>\r\n                    <Grid container>\r\n                        {/* <Grid item xs>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                Forgot password?\r\n                             </Link>\r\n                        </Grid> */}\r\n                        <Grid item>\r\n                            <Link href=\"#/sign-up\" variant=\"body2\">\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    // NavbarText\r\n} from 'reactstrap';\r\n// import { useSelector } from 'react-redux';\r\n\r\nconst HomeNavbar = (props) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    // const userName = useSelector(initialState => initialState.state.displayName)\r\n\r\n    const toggle = () => setIsOpen(!isOpen);\r\n    return (\r\n        <div>\r\n            <Navbar color=\"light\" light expand=\"md\">\r\n                <NavbarBrand href=\"/\" >Icon</NavbarBrand>\r\n                <NavbarToggler onClick={toggle} />\r\n                <Collapse isOpen={isOpen} navbar>\r\n                    <Nav className=\"mr-auto\" navbar>\r\n                        <NavItem>\r\n                            <NavLink href=\"/components/\">Components</NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink href=\"https://github.com/reactstrap/reactstrap\">GitHub</NavLink>\r\n                        </NavItem>\r\n                        <UncontrolledDropdown nav inNavbar>\r\n                            <DropdownToggle nav caret>\r\n                                Options\r\n              </DropdownToggle>\r\n                            <DropdownMenu right>\r\n                                <DropdownItem>\r\n                                    Option 1\r\n                </DropdownItem>\r\n                                <DropdownItem>\r\n                                    Option 2\r\n                </DropdownItem>\r\n                                <DropdownItem divider />\r\n                                <DropdownItem>\r\n                                    Reset\r\n                </DropdownItem>\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                    </Nav>\r\n                    {/* <NavbarText>{`hello ${userName}`}</NavbarText> */}\r\n                </Collapse>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeNavbar;","import React, { useState, useEffect } from 'react'\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport HomeNavbar from './NavBar/Navbar';\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport default function HomePage() {\r\n    const [currentUser, setCurrentUser] = useState({\r\n    });\r\n    const user = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            setCurrentUser(user);\r\n        }\r\n    }, [user]);\r\n\r\n\r\n    return (\r\n        <Container >\r\n            <Row>\r\n                <Col xs='2' style={{ backgroundColor: 'blue' }}>{currentUser.displayName} </Col>\r\n                <Col xs='8'><HomeNavbar /></Col>\r\n                <Col xs='2' style={{ backgroundColor: 'blue' }}>third</Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport { HashRouter as Router, Switch, Route, HashRouter } from 'react-router-dom';\n// import Auth from './Auth/Auth';\nimport GreetingPage from './Greeting-Page/greetingPage';\nimport SignUp from './Sign-Up/SignUp';\nimport SignIn from './Sign-in/Sign-in';\nimport HomePage from './Home-Page/HomePage';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport { Button } from 'reactstrap';\nimport { useDispatch } from 'react-redux';\nimport * as actions from './Actions/actions';\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(null);\n  const dispatch = useDispatch();\n\n\n  useEffect(() => {\n    const unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n\n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()\n          })\n        })\n      }\n      else {\n        setCurrentUser(userAuth);\n      }\n    });\n    return () => {\n      unsubscribeFromAuth();\n    }\n  }, [])\n  dispatch({ type: actions.Add_USER_OBJ, value: currentUser });\n  return (\n\n    < HashRouter >\n      <Router>\n        <Button color='danger' onClick={() => auth.signOut()}>Sign Out</Button>\n        <Switch>\n\n          {/* <Route exact path=\"/asdasdas\" component={() => { return <Auth /> }} /> */}\n          <Route exact path=\"/\" component={() => { return <GreetingPage /> }} />\n          <Route exact path=\"/homepage\" component={() => { return <HomePage /> }} />\n          <Route exact path='/log-in' component={() => { return <SignIn /> }} />\n          <Route exact path='/sign-up' component={() => { return <SignUp /> }} />\n\n        </Switch>\n      </Router>\n    </HashRouter >\n\n  );\n}\n\nexport default App;\n","export const ADD_FIRST_NAME = 'ADD_FIRST_NAME';\r\nexport const ADD_LAST_NAME = 'ADD_LAST_NAME';\r\nexport const ADD_EMAIL = 'ADD_EMAIL';\r\nexport const ADD_PASSWORD = 'ADD_PASSWORD';\r\nexport const Add_USER_OBJ = 'Add_USER_OBJ';\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// import uuid from 'react-uuid';\r\n// import * as actions from '../Actions/actions';\r\n\r\nconst initialState = {\r\n    user: null\r\n};\r\n\r\nfunction rootReducer(state = initialState, actions) {\r\n    switch (actions.type) {\r\n        case 'Add_USER_OBJ':\r\n            return {\r\n                ...state,\r\n                user: actions.value\r\n\r\n            }\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './Reducers/rootReducer';\n\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}