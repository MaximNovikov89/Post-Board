{"version":3,"sources":["Assest/Images/backGroundMain.jpg","components/Greeting-Page/greetingPage.js","firebase/firebase.utils.js","components/Sign-Up/SignUp.js","components/Sign-in/Sign-in.js","components/Home-Page/NavBar/Navbar.js","components/Home-Page/ProfileCard/ProfileCard.js","components/Home-Page/Post-Card/PostCard2.js","components/Home-Page/Post-List/PostList.js","components/Home-Page/Modal/Modal.js","components/AddFriends/AddFriends.js","components/Home-Page/FriendsSearch/FriendsSearch.js","components/Home-Page/FriendsList/FriendsList.js","components/Home-Page/HomePage.js","store/actions/userAuth.js","App.js","store/actions/getPosts.js","store/actions/getUsers.js","serviceWorker.js","store/reducers/userAuth.js","store/reducers/posts.js","store/reducers/users.js","index.js","Assest/Images/IconLogo.png"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","backGround","backgroundImage","height","backgroundRepeat","backgroundPosition","backgroundSize","backgroundAttachment","GreetingPage","classes","greetingText","className","to","Button","variant","color","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","provider","GoogleAuthProvider","setCustomParameters","prompt","createUserProfileDocument","userAuth","additionalData","a","userRef","doc","uid","get","exists","displayName","email","photoURL","createdAt","Date","set","friends","console","log","message","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignUp","useState","lastName","password","confirmPassword","userInfo","setUserInfo","history","useHistory","handleInputChange","event","target","name","value","handleSignUp","preventDefault","alert","createUserWithEmailAndPassword","catch","error","user","push","code","Container","component","maxWidth","CssBaseline","Avatar","Typography","noValidate","onSubmit","Grid","container","item","xs","sm","TextField","autoComplete","required","fullWidth","label","autoFocus","onChange","type","justify","Box","mt","SignIn","promiseVarification","setPromiseVarification","googleSignIn","signInWithPopup","promise","useEffect","handleChange","evt","handleSubmit","signInWithEmailAndPassword","FormControlLabel","control","Checkbox","onClick","Link","href","navBar","boxShadow","zIndex","maxHeight","padding","logoImg","cursor","navBarBrand","paddingLeft","fontSize","maxBorder","HomeNavbar","props","inputValue","setInputValue","handleSignOut","signOut","Navbar","Row","style","Col","src","Logo","alt","id","e","IconButton","handleSearch","media","paddingTop","ProfileCard","member","useSelector","state","currentUser","friendsCount","length","memberSince","metadata","creationTime","slice","Card","CardHeader","avatarUrl","title","userName","subheader","CardContent","CardActions","handleModal","PostCard2","post","border","author","textAlign","header","date","time","position","left","content","List","sortedPosts","posts","sort","b","exactTime","map","key","PostModal","modal","currentPost","setCurrentPost","handleInput","element","uuid","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","Modal","isOpen","toggle","ModalHeader","ModalBody","FormGroup","Input","maxLength","placeholder","Label","for","FormText","ModalFooter","docRef","globalPosts","collection","then","data","updatedPosts","update","add","AddFriends","friend","handleAddFriend","emailArr","find","goBack","disabled","FriendsSearch","usersList","users","filteredUsersList","setFilteredUsersList","inputSearch","filtered","filter","toLowerCase","FriendsList","marginBottom","filteredFriends","handleDeleteFriend","HomePage","logo","logoUrl","primaryDiv","profileCard","isModal","setIsModal","screenView","setScreenView","overflowY","PostList","setCurrentUser","dispatch","payload","App","useDispatch","docs","userArr","unsubscribeFromAuth","onAuthStateChanged","onSnapshot","snapShot","userAuthAction","exact","path","Boolean","window","location","hostname","match","initialState","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","ReduxThunk","Framework7","use","Framework7React","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.21bd1e0e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/backGroundMain.3214051d.jpg\";","import React from 'react';\r\nimport './greetingPage.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport backgroundImage from '../../Assest/Images/backGroundMain.jpg';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    backGround: {\r\n        flexGrow: 1,\r\n        backgroundImage: `url(${backgroundImage})`,\r\n        height: '100vh',\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"center center\",\r\n        backgroundSize: \"cover\",\r\n        backgroundAttachment: \"fixed\",\r\n    },\r\n}));\r\n\r\nexport default function GreetingPage() {\r\n    const classes = useStyles();\r\n    const greetingText = ['Share your thoughts pictures and work ', <br />, 'or what ever is on your to mind'];\r\n\r\n\r\n    return (\r\n        <div className={classes.backGround}>\r\n            <div className='mainCoverGrid'>\r\n                <div className='mainCover'>\r\n                    <h1 className='mainHeader'>Post-Board</h1>\r\n                    <h3 className='mainSubHeader'>{greetingText}</h3>\r\n\r\n                    <Link to='/log-in' className='joinLink'>\r\n                        <Button variant=\"contained\" color=\"primary\" className='mainJoinButton'>Join</Button>\r\n                    </Link>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyB6wCwLDHN64azl4RtHquKZOFdwlHWTpq4\",\r\n    authDomain: \"post-board-d7b1e.firebaseapp.com\",\r\n    databaseURL: \"https://post-board-d7b1e.firebaseio.com\",\r\n    projectId: \"post-board-d7b1e\",\r\n    storageBucket: \"post-board-d7b1e.appspot.com\",\r\n    messagingSenderId: \"166063070185\",\r\n    appId: \"1:166063070185:web:d88d7c53cde9c81ed90978\",\r\n    measurementId: \"G-VLFW832SVZ\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n    if (!userAuth) return;\r\n\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n    const snapShot = await userRef.get()\r\n\r\n    //If userAuth true (firebase AUTH) but not exist yet in our Database\r\n    if (!snapShot.exists) {\r\n        const { displayName, email, photoURL } = userAuth;\r\n        const createdAt = new Date();\r\n\r\n        try {\r\n            await userRef.set({\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                photoURL,\r\n                friends: [],\r\n                ...additionalData\r\n            })\r\n\r\n        } catch (error) {\r\n            console.log('Error Creating User', error.message);\r\n        }\r\n    }\r\n    return userRef;\r\n}\r\nexport default firebase;","import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignUp() {\r\n    const classes = useStyles();\r\n    const [userInfo, setUserInfo] = useState({\r\n        displayName: '',\r\n        email: '',\r\n        lastName: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        photoURL: 'https://www.jumpstarttech.com/files/2018/08/Network-Profile.png',\r\n        friends: []\r\n    });\r\n    const history = useHistory();\r\n\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setUserInfo({ ...userInfo, [name]: value });\r\n    }\r\n\r\n\r\n    //Sign-Up with email/Password firebase\r\n    const handleSignUp = async event => {\r\n        event.preventDefault();\r\n        const { displayName, email, password, confirmPassword, photoURL } = userInfo;\r\n        if (password !== confirmPassword) {\r\n            alert(\"password don't match\");\r\n            return;\r\n        }\r\n        try {\r\n            const { user } = await auth.createUserWithEmailAndPassword(email, password).catch(function (error) { console.log(error); });\r\n\r\n            await createUserProfileDocument(user, { displayName, photoURL });\r\n\r\n            setUserInfo({});\r\n            history.push('/log-in');\r\n        } catch (error) {\r\n            switch (error.code) {\r\n                case 'auth/invalid-email':\r\n                    alert(\"Email adress incorrect\")\r\n                    history.push(\"/sign-up\");\r\n                    break;\r\n                case 'auth/email-already-in-use':\r\n                    alert(\"Email already in use\")\r\n                    history.push(\"/sign-up\");\r\n                    break;\r\n                case 'auth/weak-password':\r\n                    alert('Password must be at least 8 characters long')\r\n                    history.push(\"/sign-up\");\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign up\r\n        </Typography>\r\n                <form className={classes.form} noValidate onSubmit={handleSignUp}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                autoComplete=\"fname\"\r\n                                name=\"displayName\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                label=\"First Name\"\r\n                                // value={userInfo.displayName}\r\n                                autoFocus\r\n                                onChange={handleInputChange}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                label=\"Last Name\"\r\n                                name=\"lastName\"\r\n                                autoComplete=\"lname\"\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"confirmPassword\"\r\n                                label=\"Confirm Password\"\r\n                                type=\"password\"\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign Up\r\n          </Button>\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link to=\"/log-in\" variant=\"body2\">\r\n                                Already have an account? Sign in\r\n              </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={5}>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\r\n// import { useDispatch, useSelector } from 'react-redux'\r\n// import * as authActions from '../../store/actions/userAuth';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignIn() {\r\n\r\n    //==========States=========//\r\n    const [promiseVarification, setPromiseVarification] = useState(false);\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    // const dispatch = useDispatch();\r\n\r\n    const [userInfo, setUserInfo] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    //==========Methods=========//\r\n    const googleSignIn = async (event) => {\r\n        event.preventDefault();\r\n        let promise;\r\n        promise = await signInWithGoogle();\r\n        setPromiseVarification(promise)\r\n        // dispatch(authActions.googleLogIn());\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (promiseVarification) {\r\n            history.push('/homepage')\r\n        }\r\n    }, [promiseVarification])\r\n\r\n    const handleChange = (evt) => {\r\n        setUserInfo({\r\n            ...userInfo,\r\n            [evt.target.name]: evt.target.value\r\n        })\r\n    }\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        // dispatch(authActions.emailPassLogIn(userInfo.email, userInfo.password))\r\n        const { email, password } = userInfo;\r\n        try {\r\n            await auth.signInWithEmailAndPassword(email, password);\r\n            setUserInfo({ email: '', password: '' });\r\n            // history.push('/homepage');\r\n        } catch (error) {\r\n            if (error.code === 'auth/user-not-found') {\r\n                alert(\"You have not registered yet\")\r\n            }\r\n            if (error.code === 'auth/wrong-password') {\r\n                alert(\"Wrong Password try again\")\r\n            }\r\n            else {\r\n                console.log(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                 </Typography>\r\n                <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n                    <TextField\r\n                        onChange={handleChange}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"off\"\r\n\r\n                    />\r\n                    <TextField\r\n                        onChange={handleChange}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        autoComplete=\"current-password\"\r\n\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                        label=\"Remember me\"\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={googleSignIn}\r\n                    >\r\n                        Sign In With Google\r\n                    </Button>\r\n                    <Grid container>\r\n                        {/* <Grid item xs>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                Forgot password?\r\n                             </Link>\r\n                        </Grid> */}\r\n                        <Grid item>\r\n                            <Link href=\"#/sign-up\" variant=\"body2\">\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { auth } from '../../../firebase/firebase.utils';\r\nimport Logo from '../../../Assest/Images/IconLogo.png';\r\nimport {\r\n    Navbar,\r\n    NavbarBrand,\r\n    Row,\r\n    Col,\r\n} from 'reactstrap';\r\nimport {\r\n    makeStyles,\r\n    Avatar,\r\n    TextField,\r\n    IconButton\r\n} from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n// import TextField from '@material-ui/core/TextField';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '22ch',\r\n        }\r\n    },\r\n    navBar: {\r\n        backgroundColor: '#E0FBFC',\r\n        boxShadow: \"2px 3px 3px 0px rgba(108, 105, 112,0.25),0px 10px 25px 0px rgba(110, 120, 130,5)\",\r\n        zIndex: '2',\r\n        maxHeight: '5rem',\r\n        padding: '0.6rem',\r\n    },\r\n    logoImg: { //Broken responsivness - ***FIX***\r\n        // width: '4.5rem',\r\n        // position: 'relative',\r\n        // color: 'black',\r\n        cursor: 'pointer',\r\n        width: theme.spacing(19),\r\n        height: theme.spacing(19),\r\n    },\r\n    navBarBrand: {\r\n        paddingLeft: '15px',\r\n        cursor: 'default',\r\n        fontSize: '25px'\r\n    },\r\n    maxBorder: {\r\n        maxHeight: '4.5rem'\r\n    }\r\n}));\r\n\r\nconst HomeNavbar = (props) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n\r\n    //==========Methods=========//\r\n\r\n    const handleSignOut = async () => {\r\n        await auth.signOut();\r\n        history.push('/log-in');\r\n    }\r\n\r\n    const startSearch = (e) => {\r\n        props.handleSearch(e, inputValue);\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <Navbar className={classes.navBar} >\r\n            <Row style={{ width: '100%' }}>\r\n                <Col xs='1' ></Col>\r\n\r\n                <Col xs='1' className={classes.maxBorder}>\r\n                    <Avatar className={classes.logoImg} src={Logo} alt='logo' onClick={() => history.push('/homepage')}></Avatar>\r\n                </Col>\r\n\r\n                <Col xs='2' style={{ paddingLeft: '0' }} className={classes.maxBorder}></Col>\r\n\r\n                <Col xs='3'>\r\n                    {/* <NavbarBrand className={classes.navBarBrand}>Post-Board</NavbarBrand> */}\r\n\r\n                </Col>\r\n\r\n                <Col xs='3' className={classes.maxBorder}>\r\n                    <TextField\r\n                        id=\"standard-basic\"\r\n                        label=\"Search friends\"\r\n                        onChange={(e) => setInputValue(e.target.value)}\r\n                        autoComplete=\"off\" />\r\n\r\n                    {/* //Broken responsivness - ***FIX*** */}\r\n                    <IconButton color=\"primary\" component=\"span\" style={{ marginTop: '0.5rem' }} onClick={() => startSearch('friends')}>\r\n                        <SearchIcon />\r\n                    </IconButton>\r\n                </Col>\r\n\r\n                <Col xs='1' className={classes.maxBorder}>\r\n                    <span>Log Out</span>\r\n                    <IconButton color=\"secondary\" component=\"span\" onClick={handleSignOut}>\r\n\r\n                        <ExitToAppIcon />\r\n                    </IconButton>\r\n\r\n                </Col>\r\n            </Row>\r\n\r\n        </Navbar >\r\n    );\r\n}\r\n\r\nexport default HomeNavbar;\r\n\r\n//<a href='https://pngtree.com/so/icon'>icon png from pngtree.com</a>\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n    makeStyles,\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    CardActions,\r\n    Avatar,\r\n    IconButton,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport CloudUploadOutlinedIcon from '@material-ui/icons/CloudUploadOutlined';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '80%',\r\n        height: '40%',\r\n        maxWidth: 500,\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n}));\r\n\r\nexport default function ProfileCard(props) {\r\n    //==========States=========//\r\n    const classes = useStyles();\r\n    const member = useSelector(state => state.currentUser.currentUser);\r\n    const friendsCount = member.friends.length;\r\n    const memberSince = member.metadata.creationTime.slice(5, 16);\r\n\r\n    //==========Methods=========//\r\n    const handleOpenModal = () => {\r\n        props.handleModal();\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar src={props.avatarUrl} ></Avatar>\r\n                }\r\n                title={props.userName}\r\n                subheader={`Member since ${memberSince}`}\r\n            />\r\n            <CardContent>\r\n                <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\r\n                    {friendsCount !== 0 ? `${friendsCount} Friends` : 'No friends :('}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions >\r\n                <IconButton component=\"span\">\r\n                    <CloudUploadOutlinedIcon fontSize=\"large\" onClick={handleOpenModal} />\r\n                </IconButton>\r\n                <Typography>Posts!</Typography>\r\n            </CardActions>\r\n\r\n        </Card>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ThumbUpAlt from '@material-ui/icons/ThumbUpAlt';\r\nimport TextsmsOutlinedIcon from '@material-ui/icons/TextsmsOutlined';\r\nimport EventNoteTwoToneIcon from '@material-ui/icons/EventNoteTwoTone';\r\nimport { Card, CardHeader, CardContent, CardFooter, Link, Row, Col } from 'framework7-react';\r\n\r\n\r\n\r\n\r\nexport default function PostCard2(props) {\r\n    const post = props.post;\r\n    return (\r\n        <Card style={{ margin: '0 0 20px 20px', border: '1px solid black', width: '75%' }\r\n        }>\r\n\r\n            <CardHeader style={{ backgroundColor: '#8ebfde' }}>\r\n                <Row>\r\n                    <Col>\r\n                        <div ><img src={post.photoURL} width=\"34\" height=\"34\" alt=\"Profile Picture\" /><span style={{ padding: '15px' }}>{post.author}</span></div>\r\n                    </Col>\r\n                    <Col ><div style={{ textAlign: 'center', fontSize: 20 }} >{post.header}</div></Col>\r\n                    <Col style={{ textAlign: 'end' }}><EventNoteTwoToneIcon />{post.createdAt.date}<br />{post.createdAt.time}</Col>\r\n                </Row>\r\n            </CardHeader>\r\n\r\n\r\n            <CardContent>\r\n                <Row style={{ position: 'relative', left: '15px' }}>\r\n                    <Col style={{ padding: '10px' }}>{post.content}</Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col></Col>\r\n                    <Col width=\"7\">\r\n                        <img src={\"https://cdn.framework7.io/placeholder/nature-1000x700-8.jpg\"} width=\"100%\" alt=\"Uploaded Picture\" />\r\n                    </Col>\r\n                    <Col></Col>\r\n                </Row>\r\n                {/* <p style={{ padding: '10px 0 0 10px' }}>{post.content}</p> */}\r\n                {/* <img style={{ paddingLeft: '120px' }} src={\"https://cdn.framework7.io/placeholder/nature-1000x700-8.jpg\"} width=\"80%\" /> */}\r\n                <Row>\r\n                    <Col>\r\n                        <p style={{ padding: '10px 0 0 10px' }}><ThumbUpAlt />  112 &nbsp;&nbsp; <TextsmsOutlinedIcon /> 43</p>\r\n                    </Col>\r\n                </Row>\r\n            </CardContent>\r\n\r\n\r\n            <CardFooter className=\"no-border\">\r\n                <Link>Like</Link>\r\n                <Link>Comment</Link>\r\n            </CardFooter>\r\n\r\n        </Card >\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n// import firebase from \"firebase/app\";\r\n// import * as actions from '../../../store/actions/actions';\r\nimport PostCard2 from '../Post-Card/PostCard2';\r\n\r\n\r\n\r\n\r\nconst List = () => {\r\n    // const dispatch = useDispatch();\r\n    //==========States=========//\r\n    const user = useSelector(state => state.currentUser.currentUser);\r\n    const posts = useSelector(state => state.posts.posts);\r\n    // const postType = useSelector(state => state.postListType);\r\n\r\n    const sortedPosts = posts.sort((a, b) => (a.exactTime > b.exactTime) ? -1 : 1);\r\n\r\n    return (\r\n        <div>\r\n            {sortedPosts.map(post =>\r\n                <PostCard2 key={post.id} post={post} user={user} />\r\n            )}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default List;\r\n\r\n\r\n    //==========useEffect=========//\r\n\r\n    //  Fetching Data from firebase and updating postList  //\r\n    // useEffect(() => {\r\n    //     if (postType === 'users') {\r\n    //         try {\r\n    //             //tries to access specific user document in the database using current user ID.\r\n    //             firebase\r\n    //                 .firestore()\r\n    //                 .doc(`users/${user.uid}`)\r\n    //                 .get()\r\n    //                 .then(function (doc) {\r\n\r\n    //                     if (doc.exists) {\r\n    //                         let data = doc.data();\r\n    //                         // dispatch({ type: actions.SET_POSTS, value: data.posts });\r\n    //                     }\r\n    //                     else {\r\n    //                         // doc.data() will be undefined in this case\r\n    //                         console.log(\"No such document!\");\r\n    //                     }\r\n\r\n    //                 }).catch(function (error) {\r\n    //                     console.log(\"Error getting document:\", error);\r\n    //                 })\r\n    //         }\r\n    //         catch (error) {\r\n    //             console.log(error);\r\n    //         }\r\n    //     }\r\n    //     else {\r\n    //         try {\r\n    // //             //tries to access Global post collection in the database, Setting global post list.\r\n    //             firebase\r\n    //                 .firestore()\r\n    //                 .collection('globalPosts')\r\n    //                 .get()\r\n    //                 .then(function (doc) {\r\n    //                     if (doc) {\r\n\r\n    //                         let globalPostsArr = [];\r\n    //                         let data = doc.docs;\r\n\r\n    //                         data.map(post => {\r\n    //                             globalPostsArr.push(post.data())\r\n    //                         })\r\n    //                         dispatch({ type: actions.SET_POSTS, value: globalPostsArr });\r\n    //                     }\r\n    //                     else {\r\n    //                         // doc.data() will be undefined in this case\r\n    //                         console.log(\"No such document!\");\r\n    //                     }\r\n\r\n    //                 }).catch(function (error) {\r\n    //                     console.log(\"Error getting document:\", error);\r\n    //                 })\r\n    //         }\r\n    //         catch (error) {\r\n    //             console.log(error);\r\n    //         }\r\n    // }\r\n    //     return () => { }\r\n    // }, [postType]);\r\n\r\n\r\n\r\n    //  Setting Display List  //\r\n    // useEffect(() => {\r\n    //     if (posts) {\r\n    //         if (!displayList) {\r\n    //             setDisplayList(<div />)\r\n    //         }\r\n    //     }\r\n    // }, []);","import React, { useState, useEffect } from 'react';\r\nimport uuid from 'react-uuid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Input, Label, FormText } from 'reactstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport firebase from \"firebase/app\";\r\n// import UploadImage from '../Image-Uploader/ImageUploader';\r\n\r\n\r\nconst PostModal = (props) => {\r\n    const {\r\n        className\r\n    } = props;\r\n    //==========States=========//\r\n    const [modal] = useState(true);\r\n    const [currentPost, setCurrentPost] = useState({});\r\n    // const [posts, setPosts] = useState([]);\r\n    const posts = useSelector((state) => state.posts.posts)\r\n    const user = useSelector(state => state.currentUser.currentUser);\r\n\r\n    //==========Methods=========//\r\n    const handleInput = (element) => {\r\n        setCurrentPost({\r\n            ...currentPost,\r\n            id: uuid(),\r\n            [element.target.name]: element.target.value,\r\n            photoURL: user.photoURL,\r\n            createdAt: {\r\n                date: new Date().getDate() + '-' + (new Date().getMonth() + 1) + '-' + new Date().getFullYear(),\r\n                time: new Date().getHours() + \":\" + new Date().getMinutes(),\r\n            },\r\n            exactTime: new Date().getDate() + '-' + (new Date().getMonth() + 1) + '-' + new Date().getFullYear() + \":\" + new Date().getHours() + \":\" + new Date().getMinutes() + \":\" + new Date().getSeconds()\r\n\r\n        })\r\n    }\r\n    //post to database//\r\n    const handlePost = () => {\r\n\r\n        const docRef = firebase.firestore().doc(`users/${user.uid}`);\r\n        const globalPosts = firebase.firestore().collection('globalPosts');\r\n\r\n        //Accessing specific user document, Adding post to user document. \r\n        docRef\r\n            .get()\r\n            .then(\r\n                function (doc) {\r\n                    let data = doc.data();\r\n                    if (data.posts) {\r\n\r\n                        let updatedPosts = posts;\r\n                        updatedPosts.push(currentPost);\r\n\r\n                        docRef.update({\r\n                            posts: updatedPosts\r\n                        })\r\n                        globalPosts.add({ author: `${user.displayName}`, ...currentPost })\r\n                    }\r\n                    else {\r\n                        docRef.update({\r\n                            posts: [currentPost]\r\n                        })\r\n                        globalPosts.add({ author: `${user.displayName}`, ...currentPost })\r\n                    }\r\n                }\r\n            );\r\n        props.handleModal();\r\n    }\r\n    // const addPicture = (pic) => {\r\n    //     setCurrentPost(prevState => ({ ...prevState, image: pic }));\r\n    // }\r\n    return (\r\n        <div>\r\n            {/* <Button color=\"danger\" onClick={toggle}>{buttonLabel}</Button> */}\r\n            <Modal isOpen={modal} toggle={props.handleModal} className={className}>\r\n\r\n                <ModalHeader toggle={props.handleModal}>\r\n                    <TextField\r\n                        id=\"standard-basic\"\r\n                        label=\"Post Header\"\r\n                        name=\"header\"\r\n                        onChange={handleInput} />\r\n                </ModalHeader>\r\n\r\n\r\n                <ModalBody>\r\n                    <FormGroup >\r\n                        <Input\r\n                            style={{ height: '10rem' }}\r\n                            type=\"textarea\"\r\n                            id=\"exampleText\"\r\n                            name=\"content\"\r\n                            onChange={handleInput}\r\n                            maxLength={200}\r\n                            placeholder='You say...' />\r\n\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"exampleFile\">Photo</Label>\r\n                        <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\r\n                        <FormText color=\"muted\">\r\n                            Upload Your Photo here.\r\n        </FormText>\r\n                    </FormGroup>\r\n                </ModalBody>\r\n\r\n\r\n                {/* <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"Add picture...\"\r\n                    name=\"header\"\r\n                    disabled />\r\n                <UploadImage singleImage addPicture={addPicture} /> */}\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={handlePost}>Post</Button>\r\n                    <Button color=\"secondary\" onClick={props.handleModal}> Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostModal;","import React from 'react';\r\nimport { Card, CardHeader, } from 'framework7-react';\r\nimport { useSelector } from 'react-redux';\r\nimport firebase from \"firebase/app\";\r\n\r\n\r\n\r\n\r\nexport default function AddFriends(props) {\r\n    const friend = props.user;\r\n    const currentUser = useSelector(state => state.currentUser.currentUser);\r\n\r\n    //==========Methods=========//\r\n    const back = () => {\r\n        props.goBack('back');\r\n    }\r\n    const handleAddFriend = () => {\r\n        const docRef = firebase.firestore().doc(`users/${currentUser.uid}`);\r\n\r\n        docRef\r\n            .get()\r\n            .then(\r\n                function (doc) {\r\n                    let data = doc.data();\r\n\r\n                    try {\r\n                        if (data.friends) {\r\n                            //Creating friends emails Array \r\n                            let emailArr = []\r\n                            data.friends.map(element => {\r\n                                emailArr.push(element.email)\r\n                            })\r\n                            //Searching if the current is already friends with this friend.\r\n                            //*This friend = searched friend.\r\n                            let friendExist = false;\r\n                            friendExist = emailArr.find(e => e === friend.email)\r\n                            if (friendExist) {\r\n                                alert(`${friend.displayName} is already a friend`);\r\n                                friendExist = false;\r\n                            }\r\n                            else {\r\n\r\n                                docRef.update({\r\n                                    ...data,\r\n                                    friends: [...data.friends, friend]\r\n                                })\r\n                            }\r\n                        }\r\n                        else {\r\n                            docRef.set({ ...data, friends: [friend] });\r\n                        }\r\n\r\n                    }\r\n                    catch (error) {\r\n                        console.log(`Error adding Friend ${error}`);\r\n                    }\r\n                });\r\n        back();\r\n    };\r\n\r\n    return (\r\n\r\n        <Card >\r\n            <CardHeader className=\"no-border\">\r\n                <span >\r\n                    <img src={friend.photoURL} width=\"34\" height=\"34\" /></span>\r\n                <span >{friend.displayName}</span>\r\n            </CardHeader>\r\n\r\n\r\n            {friend.email === currentUser.email\r\n                ? <button onClick={handleAddFriend} disabled>It's you!</button>\r\n                : <button onClick={handleAddFriend}>Add Friend</button>}\r\n\r\n\r\n        </Card>\r\n\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport AddFriends from '../../AddFriends/AddFriends';\r\n\r\n\r\nexport default function FriendsSearch(props) {\r\n    //==========States=========//\r\n    const usersList = useSelector(state => state.users.usersList);\r\n    const [filteredUsersList, setFilteredUsersList] = useState([]);\r\n\r\n    //==========UseEffect==========//\r\n    useEffect(() => {\r\n        if (props.inputSearch === '') {\r\n            setFilteredUsersList(usersList);\r\n        }\r\n        else {\r\n            let filtered = usersList.filter(user => user.displayName.toLowerCase() === props.inputSearch.toLowerCase())\r\n            setFilteredUsersList(filtered);\r\n        }\r\n    }, [props, usersList])\r\n\r\n\r\n    // let usersArr = filteredUsersList.map(user =>\r\n    //     <div>{user.desplayName}</div>\r\n    // )\r\n    return (\r\n\r\n        filteredUsersList ? filteredUsersList.map(user =>\r\n            <div key={user.email}>{user ? <AddFriends user={user} goBack={props.goBack} /> : 'No user Found...'}</div>\r\n        ) : <div>False</div>\r\n    )\r\n\r\n\r\n}\r\n","import React from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport firebase from \"firebase/app\";\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\n\r\n\r\n\r\nexport default function FriendsList() {\r\n    const friends = useSelector(state => state.currentUser.currentUser.friends);\r\n    const currentUser = useSelector(state => state.currentUser.currentUser);\r\n\r\n    const handleDeleteFriend = (email) => {\r\n        const docRef = firebase.firestore().doc(`users/${currentUser.uid}`);\r\n\r\n        docRef\r\n            .get()\r\n            .then(\r\n                function (doc) {\r\n                    let data = doc.data();\r\n\r\n                    try {\r\n                        if (data.friends) {\r\n                            //Filtering friends Array.\r\n                            let filteredFriends = data.friends.filter(friend => friend.email !== email);\r\n\r\n                            //Updating fridns Array in the database.\r\n                            docRef.update({\r\n                                ...data,\r\n                                friends: filteredFriends\r\n                            })\r\n                        }\r\n                    }\r\n                    catch (error) {\r\n                        console.log(`Error Deleting Friend ${error}`);\r\n                    }\r\n                });\r\n    }\r\n    return (\r\n        <>\r\n            <Row style={{ marginTop: '2rem' }}>\r\n                <Col xs='3' />\r\n\r\n                <Col xs='6'><h3>Friends</h3></Col>\r\n                {/* import ContactsIcon from '@material-ui/icons/Contacts'; */}\r\n                <Col xs='3' />\r\n            </Row>\r\n            {friends ? friends.map(friend =>\r\n                <Row key={friend.displayName} style={{ marginBottom: '10px' }}>\r\n                    <Col xs='1'><img src={friend.photoURL} width=\"34\" height=\"35\" /></Col>\r\n                    <Col xs='1' />\r\n                    <Col xs='5'><p>{friend.displayName}</p></Col>\r\n                    <Col xs='1'>\r\n                        <IconButton\r\n                            component=\"span\"\r\n                            style={{\r\n                                marginBottom: '5px',\r\n                                padding: '0px 4px 3px 4px'\r\n                            }}\r\n                            onClick={() => handleDeleteFriend(friend.email)}>\r\n                            <HighlightOffIcon /></IconButton></Col>\r\n                </Row>\r\n            ) : <div></div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Row, Col } from 'reactstrap';\r\nimport HomeNavbar from './NavBar/Navbar';\r\nimport { useSelector } from 'react-redux';\r\nimport ProfileCard from './ProfileCard/ProfileCard';\r\nimport Logo from '../../Assest/Images/IconLogo.png';\r\nimport PostList from './Post-List/PostList';\r\nimport PostModal from './Modal/Modal';\r\nimport FriendsSearch from './FriendsSearch/FriendsSearch';\r\nimport FriendsList from './FriendsList/FriendsList';\r\n\r\n\r\nexport default function HomePage() {\r\n\r\n    //==========Styles-MaterialUI==========//\r\n    const useStyles = makeStyles((theme) => ({\r\n        logo: {\r\n            width: '70px',\r\n            height: '70px'\r\n        },\r\n        logoUrl: {\r\n            backgroundImage: `url(${Logo})`,\r\n        },\r\n        primaryDiv: {\r\n            backgroundColor: '#f5f5f5',\r\n            height: '100vh',\r\n            width: '100%'\r\n        },\r\n        profileCard: {\r\n            marginTop: '6.2%',\r\n        }\r\n    }));\r\n    const classes = useStyles();\r\n\r\n\r\n    //==========States=========//\r\n    // const [currentUser, setCurrentUser] = useState({});\r\n    const currentUser = useSelector(state => state.currentUser.currentUser);\r\n    const [isModal, setIsModal] = useState(false);\r\n    const [screenView, setScreenView] = useState(<FriendsList currentUser={currentUser} />)\r\n\r\n\r\n    //==========UseEffect==========//\r\n    // useEffect(() => {\r\n    //     if (user) {\r\n    //         setCurrentUser(user);\r\n    //     }\r\n    // }, [user]);\r\n\r\n    //==========Methods=========//\r\n    const handleModal = () => {\r\n        setIsModal(!isModal);\r\n    }\r\n    const handleSearch = (type, value) => {\r\n        if (type === 'friends') {\r\n            setScreenView(<FriendsSearch inputSearch={value} goBack={handleSearch} />);\r\n        }\r\n        else {\r\n            setScreenView(<FriendsList currentUser={currentUser} />);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.primaryDiv} >\r\n            <Row>\r\n                <Col xs='12' >\r\n                    <HomeNavbar handleSearch={handleSearch} />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row style={{ margin: 0 }} className={classes.primaryDiv}>\r\n\r\n                <Col xs='3' className={`d-flex justify-content-center ${classes.profileCard}`}>\r\n                    <ProfileCard\r\n\r\n                        avatarUrl={currentUser.photoURL}\r\n                        userName={currentUser.displayName}\r\n                        handleModal={handleModal} />\r\n                </Col>\r\n\r\n                <Col xs='7'>\r\n\r\n                    <Row >\r\n                        <Col xs='12' style={{ overflowY: 'scroll', maxHeight: '90vh', padding: '2rem' }}>\r\n\r\n                            {isModal ? <PostModal handleModal={handleModal} /> : <PostList />}\r\n\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Col>\r\n\r\n\r\n                <Col xs='2' style={{ backgroundColor: '#E0FBFC', zIndex: '1' }}>\r\n                    {/* <FriendsList currentUser={currentUser} /> */}\r\n                    {screenView}\r\n                </Col>\r\n\r\n\r\n            </Row>\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\n// Credits:\r\n{/* <a href='https://pngtree.com/so/hanging-bulletin-board'>hanging-bulletin-board png from pngtree.com</a> */ }","export const AUTHENTICATE = 'AUTHENTICATE';\r\n\r\nexport const setCurrentUser = (user) => (dispatch) => {\r\n    dispatch({ type: AUTHENTICATE, payload: user })\r\n}","import React, { useEffect, useState } from 'react'\nimport { HashRouter as Router, Switch, Route, HashRouter } from 'react-router-dom';\nimport GreetingPage from './components/Greeting-Page/greetingPage';\nimport SignUp from './components/Sign-Up/SignUp';\nimport SignIn from './components/Sign-in/Sign-in';\nimport HomePage from './components/Home-Page/HomePage';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport firebase from \"firebase/app\";\nimport { useDispatch } from 'react-redux';\nimport * as userAuthAction from './store/actions/userAuth';\nimport * as getPostsAction from './store/actions/getPosts';\nimport * as getUsersAction from './store/actions/getUsers';\n\n\n\nfunction App() {\n  // const [currentUser, setCurrentUser] = useState(null);\n  const dispatch = useDispatch();\n\n\n  useEffect(() => {\n    dispatch(getPostsAction.getPosts());\n    dispatch(getUsersAction.getUsers());\n    let currentUser;\n    const unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        userRef.onSnapshot(snapShot => {\n          // setCurrentUser({\n          //   ...userAuth,\n          //   ...snapShot.data()\n          // });\n          currentUser = { ...userAuth, ...snapShot.data() };\n          dispatch(userAuthAction.setCurrentUser(currentUser));\n        });\n      }\n      else {\n        currentUser = userAuth\n        dispatch(userAuthAction.setCurrentUser(currentUser));\n      }\n    });\n    return () => {\n      unsubscribeFromAuth();\n    }\n  }, [dispatch]);\n\n\n\n  // useEffect(() => {\n  //   //tries to access Users Collection and storing users Array in the Store.\n  //   try {\n\n  //     firebase\n  //       .firestore()\n  //       .collection(`users`)\n  //       .get()\n  //       .then(function (doc) {\n  //         let userArr = doc.docs.map(user => user.data());\n  //         dispatch({ type: actions.SET_FRIENDS_LIST, value: userArr });\n  //       })\n  //       .catch(function (error) {\n  //         console.log(\"Error getting document:\", error);\n  //       })\n  //   }\n  //   catch (error) {\n  //     console.log(error);\n  //   }\n\n  // }, [currentUser]);\n\n  return (\n    < HashRouter >\n      <Router>\n        <Switch>\n\n          <Route exact path=\"/\" key='1' component={() => { return <GreetingPage /> }} />\n          <Route exact path=\"/homepage\" key='2' component={() => { return <HomePage /> }} />\n          <Route exact path='/log-in' key='3' component={() => { return <SignIn /> }} />\n          <Route exact path='/sign-up' key='4' component={() => { return <SignUp /> }} />\n\n        </Switch>\n      </Router>\n    </HashRouter >\n\n  );\n}\n\nexport default App;\n","import firebase from \"firebase/app\";\r\nexport const GET_POSTS = 'GET_POSTS';\r\n\r\nexport const getPosts = () => async (dispatch) => {\r\n    try {\r\n        //tries to access Global post collection in the database, Setting posts in redux store.\r\n        firebase\r\n            .firestore()\r\n            .collection('globalPosts')\r\n            .get()\r\n            .then(function (doc) {\r\n                if (doc) {\r\n                    let posts = [];\r\n                    let data = doc.docs;\r\n                    data.map(post => {\r\n                        posts.push(post.data())\r\n                    })\r\n\r\n                    dispatch({ type: GET_POSTS, payload: posts });\r\n                }\r\n                else {\r\n                    // doc.data() will be undefined in this case\r\n                    console.log(\"No such document!\");\r\n                }\r\n\r\n            }).catch(function (error) {\r\n                console.log(\"Error getting document:\", error);\r\n            })\r\n    }\r\n    catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import firebase from \"firebase/app\";\r\nexport const GET_USERS = 'GET_USERS';\r\n\r\n\r\n\r\nexport const getUsers = () => async (dispatch) => {\r\n    try {\r\n        //tries to access Users Collection and storing users Array in the Store.\r\n        firebase\r\n            .firestore()\r\n            .collection(`users`)\r\n            .get()\r\n            .then(function (doc) {\r\n                let userArr = doc.docs.map(user => user.data());\r\n                dispatch({ type: GET_USERS, payload: userArr });\r\n            })\r\n            .catch(function (error) {\r\n                console.log(\"Error getting document:\", error);\r\n            })\r\n    }\r\n    catch (error) {\r\n        console.log(error);\r\n    }\r\n\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { AUTHENTICATE } from '../actions/userAuth';\r\n\r\nconst initialState = {\r\n    currentUser: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case AUTHENTICATE:\r\n            return {\r\n                currentUser: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import { GET_POSTS } from '../actions/getPosts';\r\n\r\nconst initialState = {\r\n    posts: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import { GET_USERS } from '../actions/getUsers';\r\n\r\nconst initialState = {\r\n    usersList: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_USERS:\r\n            return {\r\n                ...state,\r\n                usersList: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { Provider } from 'react-redux';\nimport Framework7 from 'framework7/framework7-lite.esm.bundle.js';\nimport Framework7React from 'framework7-react';\nimport ReduxThunk from 'redux-thunk';\n//Reducers//\nimport currentUser from './store/reducers/userAuth';\nimport posts from './store/reducers/posts';\nimport users from './store/reducers/users';\n\n\nconst rootReducer = combineReducers({\n  currentUser: currentUser,\n  posts: posts,\n  users: users\n\n});\n\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(ReduxThunk)));\nFramework7.use(Framework7React);\n\nReactDOM.render(\n  <React.StrictMode> <Provider store={store}>\n\n    <App />\n\n  </Provider></React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/IconLogo.3c247b46.png\";"],"sourceRoot":""}